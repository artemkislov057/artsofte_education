{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AppService",
            "id": "injectable-AppService-0dba2b151b3c98f67f0cb39750deafcd9788d2dcf265f960876fd507b1e9e510cbf9877322f3c51417a641646ddf8c14dc24b455f57d17d75e675dfe816a5101",
            "file": "src/app/app.service.ts",
            "properties": [
                {
                    "name": "currentCourseId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentModuleId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCurrentCourseId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getcurrentModuleId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCurrentCourseId",
                    "args": [
                        {
                            "name": "newId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setcurrentModuleId",
                    "args": [
                        {
                            "name": "newId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AppService {\r\n    private currentCourseId: string = '';\r\n    private currentModuleId: string = '';\r\n\r\n    getCurrentCourseId() {\r\n        return this.currentCourseId;\r\n    }\r\n\r\n    setCurrentCourseId(newId: string) {\r\n        this.currentCourseId = newId;\r\n    }\r\n\r\n    getcurrentModuleId() {\r\n        return this.currentModuleId;\r\n    }\r\n\r\n    setcurrentModuleId(newId: string) {\r\n        this.currentModuleId = newId;\r\n    }\r\n}",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "GetCourseId",
            "id": "class-GetCourseId-ac1491e56900e8cc245ca0798f3943218d733bdfe61fefe4f549b0615795ec726441315628a5883233d983857e1399f176b2ccbec86d77d9a7520fe361c3be6e",
            "file": "src/app/store/actions/course-id.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport enum CourseIdActions {\r\n    Get_Course_Id = '[CourseId] Get_Course_Id',\r\n    Set_Course_Id = '[CourseId] Set_Course_Id',\r\n}\r\n\r\nexport class GetCourseId implements Action {\r\n    public readonly type = CourseIdActions.Get_Course_Id;\r\n}\r\n\r\nexport class SetCourseId implements Action {\r\n    public readonly type = CourseIdActions.Set_Course_Id;\r\n    constructor(public payload: string) {  }\r\n}\r\n\r\nexport type CourseIdActionsType = GetCourseId | SetCourseId;",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "CourseIdActions.Get_Course_Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetCourseId",
            "id": "class-SetCourseId-ac1491e56900e8cc245ca0798f3943218d733bdfe61fefe4f549b0615795ec726441315628a5883233d983857e1399f176b2ccbec86d77d9a7520fe361c3be6e",
            "file": "src/app/store/actions/course-id.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport enum CourseIdActions {\r\n    Get_Course_Id = '[CourseId] Get_Course_Id',\r\n    Set_Course_Id = '[CourseId] Set_Course_Id',\r\n}\r\n\r\nexport class GetCourseId implements Action {\r\n    public readonly type = CourseIdActions.Get_Course_Id;\r\n}\r\n\r\nexport class SetCourseId implements Action {\r\n    public readonly type = CourseIdActions.Set_Course_Id;\r\n    constructor(public payload: string) {  }\r\n}\r\n\r\nexport type CourseIdActionsType = GetCourseId | SetCourseId;",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "CourseIdActions.Set_Course_Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetModuleId",
            "id": "class-SetModuleId-72b94168c90fd2cf24110dce8ceb863301f6c0b9f455e14d4937f14d936d9eff11762de94922f93f9a0418fd4ded9a5740a8d0bdb550e416c062f10e3b48e3f8",
            "file": "src/app/store/actions/module-id.action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from \"@ngrx/store\";\r\n\r\nexport enum ModuleIdActions {\r\n    Set_Module_Id = '[CourseId] Set_Module_Id',\r\n}\r\n\r\nexport class SetModuleId implements Action {\r\n    public readonly type = ModuleIdActions.Set_Module_Id;\r\n    constructor(public payload: string) {  }\r\n}\r\n\r\nexport type ModuleIdActionsType = SetModuleId;",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "ModuleIdActions.Set_Module_Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AdditionalMaterialContainerComponent",
            "id": "component-AdditionalMaterialContainerComponent-71728e50b4dc18231280c8e6ebb84ea71a419168c0bdd7f259f61ae5226aac68dc64c771667a8c1281bf50b093ce084d7dd9973c5a4ed97734571eb27076e708",
            "file": "src/app/components/additional-material-container/additional-material-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-additional-material-container",
            "styleUrls": [
                "./additional-material-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./additional-material-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-additional-material-container',\r\n  templateUrl: './additional-material-container.component.html',\r\n  styleUrls: ['./additional-material-container.component.scss']\r\n})\r\nexport class AdditionalMaterialContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #FFFFFF;\r\n    border-radius: 10px;\r\n    height: 441px;\r\n}\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 64px;\r\n    height: 100%;\r\n}\r\n\r\n.addImageButton {\r\n    width: 323px;\r\n    height: 50px;\r\n    background: #FF841F;\r\n    border-radius: 10px;\r\n    border: none;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n    color: #FFFFFF;\r\n\r\n    cursor: pointer;\r\n}\r\n\r\n.addImageButton:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.inputUrl {\r\n    width: 566px;\r\n    height: 47px;\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid #000000;\r\n\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n    letter-spacing: 0.015em;\r\n    color: #5F5F5F;\r\n}\r\n\r\n.toolbar {\r\n    display: flex;\r\n    height: 120px;\r\n    box-sizing: border-box;\r\n    padding: 10px 20px;\r\n    align-items: center;\r\n    gap: 45px;\r\n    box-shadow: 0px -4px 10px rgba(69, 69, 69, 0.07);\r\n    border-radius: 10px;\r\n}\r\n\r\n.navigateButton {\r\n    width: 15px;\r\n    height: 25px;\r\n    background-color: transparent;\r\n    border: none;\r\n    background: url('./icons/navigateLeft.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n    cursor: pointer;\r\n}\r\n\r\n.navigateButton.next {\r\n    transform: rotate(180deg);\r\n}\r\n\r\n.items {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.item {\r\n    display: flex;\r\n    width: 140px;\r\n    height: 100px;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.item.add {\r\n    background: url('./icons/add.svg') 50% 50% no-repeat;\r\n    background-size: 20px 20px;\r\n    background-color: #ECEEF3;\r\n    cursor: pointer;\r\n}",
                    "styleUrl": "./additional-material-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"content\">\r\n        <button class=\"addImageButton\">Загрузить обложку книги</button>\r\n        <input type=\"url\" placeholder=\"Вставить ссылку на книгу\" class=\"inputUrl\" />\r\n    </div>\r\n    <div class=\"toolbar\">\r\n        <button class=\"navigateButton prev\"></button>\r\n        <div class=\"items\">\r\n            <div class=\"item add\"></div>\r\n        </div>\r\n        <button class=\"navigateButton next\"></button>\r\n    </div>\r\n</div>"
        },
        {
            "name": "AnswerOptionComponent",
            "id": "component-AnswerOptionComponent-7f30b253420bbdbe7fdeb9739da2129550e259f1305341c2768e94b572eafe351c5e988600673f69c910e95147dbc8c02f1758ec0bc2a62e1c6a4c3bbde92eb2",
            "file": "src/app/components/answer-option/answer-option.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-answer-option",
            "styleUrls": [
                "./answer-option.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./answer-option.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'radio'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"radio\" | \"checkbox\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-answer-option',\r\n  templateUrl: './answer-option.component.html',\r\n  styleUrls: ['./answer-option.component.scss']\r\n})\r\nexport class AnswerOptionComponent implements OnInit {\r\n  @Input() type: 'radio' | 'checkbox' = 'radio';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 20px 30px 20px 15px;\r\n    border: 1px solid #5F5F5F;\r\n    border-radius: 10px;\r\n}\r\n\r\n.left {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n}\r\n\r\n.checkIcon {\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n\r\n.checkIcon.radio {\r\n    background: url('./icons/radio.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.checkIcon.radio,\r\n.checkIcon.checkbox {\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.optionName {\r\n    width: 578px;\r\n    border: none;\r\n    border-bottom: 1px solid #5F5F5F;\r\n    outline: none;\r\n}\r\n\r\n.removeIcon {\r\n    width: 16px;\r\n    height: 22px;\r\n    background: url('./icons/removeIcon.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n\r\n    cursor: pointer;\r\n}\r\n\r\n.removeIcon:hover {\r\n    opacity: .7;\r\n}",
                    "styleUrl": "./answer-option.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"left\">\r\n        <div \r\n            class=\"checkIcon\"\r\n            [class.radio]=\"type==='radio'\" \r\n            [class.checkbox]=\"type==='checkbox'\" \r\n        ></div>\r\n        <input class=\"optionName\" placeholder=\"Введите вариант ответа...\"/>\r\n    </div>\r\n    <div class=\"removeIcon\"></div>\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2238722ef0faa07bc8b04f338a3a3247b80be4b2259f45f30132d49d0601b57f88508e2aaa41165a1716823e2ec6b81ad5d4fe3498bb0672031a179e7b3a0916",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "onClickCreateCourse",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickHomeButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from './store/states/app.state';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private route: Router, private _store: Store<AppState>) {\r\n    this.login();\r\n  }\r\n\r\n  async login() {\r\n    const response = await fetch('https://localhost:5001/api/users/login', {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        \"name\": \"user1\",\r\n        \"password\": \"string\",\r\n        \"isPersistent\": true,\r\n      }),\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    if(response.ok) {\r\n      console.log('isLoginned');\r\n    } else {\r\n      alert('Проблема с логином')\r\n    }\r\n  }\r\n\r\n  onClickCreateCourse(): void {\r\n    this.route.navigateByUrl('/create-course');\r\n  }\r\n\r\n  onClickHomeButton(): void {\r\n    this.route.navigateByUrl('/');\r\n  }\r\n\r\n }\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n}\r\n\r\n.header {\r\n    position: sticky;\r\n    top: 0;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"main\">\r\n    <app-header \r\n        class=\"header\" \r\n        (onClickCreateCourse)=\"onClickCreateCourse()\" \r\n        (onClickHome)=\"onClickHomeButton()\"\r\n    ></app-header>\r\n    <router-outlet></router-outlet>\r\n</div>"
        },
        {
            "name": "BottomEditContainerComponent",
            "id": "component-BottomEditContainerComponent-ca9ec3ecf4677575b0ebe915091ea49ad11c468e63c1e18a29633b5a889e1d36b45c2d5b340ba250a69b378bdc242f4d104461a7ef4fe675255e19f68e1e5f47",
            "file": "src/app/components/bottom-edit-container/bottom-edit-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bottom-edit-container",
            "styleUrls": [
                "./bottom-edit-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bottom-edit-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                },
                {
                    "name": "saveLesson",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bottom-edit-container',\r\n  templateUrl: './bottom-edit-container.component.html',\r\n  styleUrls: ['./bottom-edit-container.component.scss']\r\n})\r\nexport class BottomEditContainerComponent implements OnInit {\r\n  @Output() saveLesson = new EventEmitter();\r\n  @Output() cancel = new EventEmitter();\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClickSave() {\r\n    this.saveLesson.emit();\r\n  }\r\n\r\n  onClickCancel() {\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 50px;\r\n    box-sizing: border-box;\r\n    padding: 10px 40px;\r\n    background: #FFFFFF;\r\n    box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.button {\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    padding: 15px 20px;\r\n    border: none;\r\n    border-radius: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n    height: 50px;\r\n}\r\n\r\n.button:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.cancel {\r\n    border: 1px solid #2E62D9;\r\n    color: #2E62D9;\r\n    background-color: transparent;\r\n}\r\n\r\n.save {\r\n    background: #6BB736;\r\n    color: #FFFFFF;\r\n}",
                    "styleUrl": "./bottom-edit-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <button class=\"cancel button\" (click)=\"onClickCancel()\">Отменить</button>\r\n    <button class=\"save button\" (click)=\"onClickSave()\">Сохранить  урок</button>\r\n</div>"
        },
        {
            "name": "CourseComponent",
            "id": "component-CourseComponent-fab9ba3bc0d22cdf1ae2ff3f74edad2f21110179dbc4228e3099f6883aa48e5ddcfd5b042ee094fc2a7e584b8cf391c78bc32a14381b8ca583f304ed4dd6cbf0",
            "file": "src/app/components/coursesList/components/course/course.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-course",
            "styleUrls": [
                "./course.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./course.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentModule",
                    "defaultValue": "{\r\n    description: '',\r\n    id: '',\r\n    lessons: [],\r\n    name: ''\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Module",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Module } from 'src/typings/api/courseType';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.scss']\r\n})\r\nexport class CourseComponent implements OnInit {\r\n  @Input() currentModule: Module = {\r\n    description: '',\r\n    id: '',\r\n    lessons: [],\r\n    name: ''\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\n.items {\r\n    display: flex;\r\n    width: 90%;\r\n    flex-direction: column;\r\n    align-self: flex-end;\r\n    gap: 22px;\r\n}",
                    "styleUrl": "./course.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-header-course [title]=\"currentModule.name\"></app-header-course>\r\n    <div class=\"items\">\r\n        <app-item-course \r\n            *ngFor=\"let value of currentModule.lessons\" \r\n            [title]=\"value.name\"\r\n        ></app-item-course>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "CourseContentPageComponent",
            "id": "component-CourseContentPageComponent-0980b5ded8078d2b2bbfe6409ac0f8909e0352b485478e2bf721344abb6b966f7206da3790794f70c7a577ad338edf3e456c819bff582d72aea2630e117f0026",
            "file": "src/app/pages/course-content-page/course-content-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-course-content-page",
            "styleUrls": [
                "./course-content-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./course-content-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "courseInfo",
                    "defaultValue": "initCourseInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CourseType",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "currentCourseId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "getCourseInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickLesson",
                    "args": [
                        {
                            "name": "moduleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "lessonId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "moduleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lessonId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickModule",
                    "args": [
                        {
                            "name": "moduleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "moduleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/states/app.state';\r\nimport { CourseType } from 'src/typings/api/courseType';\r\n\r\nconst initCourseInfo = {\r\n  description: '',\r\n  id: '',\r\n  modules: [],\r\n  name: '',\r\n}\r\n\r\n@Component({\r\n  selector: 'app-course-content-page',\r\n  templateUrl: './course-content-page.component.html',\r\n  styleUrls: ['./course-content-page.component.scss']\r\n})\r\nexport class CourseContentPageComponent implements OnInit {\r\n  courseInfo: CourseType = initCourseInfo;\r\n  currentCourseId: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRouter: ActivatedRoute,\r\n    private _store: Store<AppState>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activeRouter.queryParamMap.subscribe((param) => {\r\n      const courseId = param.get('courseId');\r\n      if(courseId) {\r\n        this.currentCourseId = courseId;\r\n      } else {\r\n        alert('Что то не так с ids');\r\n      }\r\n   })\r\n   this.getCourseInfo();\r\n  }\r\n\r\n  async getCourseInfo() {\r\n    const response = await fetch(`https://localhost:5001/api/courses/${this.currentCourseId}`, {\r\n      credentials: 'include',\r\n    })\r\n    const data = await response.json() as CourseType;\r\n    this.courseInfo = data;\r\n  }\r\n\r\n  onClickModule(moduleId: string) {\r\n    this.router.navigate(['/edit-course/select-lesson-type'], {\r\n      queryParamsHandling: 'merge',\r\n      queryParams: {\r\n        moduleId: moduleId,\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickLesson(moduleId: string, lessonId: string) {\r\n\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.container {\r\n    width: 937px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 52px;\r\n    box-sizing: border-box;\r\n    padding: 62px 0;\r\n}\r\n\r\n.title {\r\n    font-weight: 600;\r\n    font-size: 32px;\r\n    line-height: 39px;\r\n    display: flex;\r\n    align-items: center;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n}",
                    "styleUrl": "./course-content-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"container\">\r\n        <div class=\"title\">{{courseInfo.name}}</div>\r\n        <app-courseslist \r\n            [modules]=\"courseInfo.modules\"\r\n            (onClickModuleOut)=\"onClickModule($event)\"\r\n        ></app-courseslist>\r\n    </div>\r\n</div>"
        },
        {
            "name": "CourseMenuComponent",
            "id": "component-CourseMenuComponent-db6147501626a376440e5c9aea9a2bc4b83c5d26b36c1a4157e86ae6ff28433a665877e942327b374886c508a5d1eec0d0cfbbe88e7c9c875a351447fe9f4b06",
            "file": "src/app/components/course-menu/course-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-course-menu",
            "styleUrls": [
                "./course-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./course-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "courseInfo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "CourseType | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "createModule",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickCreateModule",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CourseType, Module } from 'src/typings/api/courseType';\r\n\r\n@Component({\r\n  selector: 'app-course-menu',\r\n  templateUrl: './course-menu.component.html',\r\n  styleUrls: ['./course-menu.component.scss']\r\n})\r\nexport class CourseMenuComponent implements OnInit {\r\n  @Input() courseInfo: CourseType | null = null;\r\n  @Output() createModule = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClickCreateModule() {\r\n    this.createModule.emit();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 320px;\r\n    height: 100%;\r\n    background: #FFFFFF;\r\n    box-shadow: 2px 0px 15px rgba(0, 0, 0, 0.05);\r\n    gap: 11px;\r\n    z-index: 5;\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    padding: 40px 20px;\r\n    gap: 20px;\r\n    align-items: center;\r\n    box-shadow: 0px 5px 10px rgba(69, 69, 69, 0.1);\r\n    border-radius: 0px 0px 20px 20px;\r\n}\r\n\r\n.logoCourse {\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 10px;\r\n}\r\n\r\n.titleCourse {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.moduleContainer {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.button {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: auto;\r\n    padding: 10px 33px 20px;\r\n}\r\n\r\n.addModuleButton {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 52px;\r\n    background: #2E62D9;\r\n    box-shadow: 0px 4px 10px rgba(69, 69, 69, 0.1);\r\n    border-radius: 10px;\r\n    border: none;\r\n    color: #FFFFFF;\r\n    flex-shrink: 0;\r\n    cursor: pointer;\r\n}\r\n\r\n.addModuleButton:hover {\r\n    opacity: .7;\r\n}",
                    "styleUrl": "./course-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"header\">\r\n        <img class=\"logoCourse\" src=\"/assets/jsIcon.svg\" alt=\"Лого курса\" />\r\n        <div class=\"titleCourse\">{{courseInfo?.name}}</div>\r\n    </div>\r\n    <div class=\"moduleContainer\">\r\n        <div class=\"wrapper\" *ngFor=\"let item of courseInfo?.modules\">\r\n            <app-module-item [title]=\"item.name\"></app-module-item>\r\n        </div>\r\n    </div>\r\n    <div class=\"button\">\r\n        <button class=\"addModuleButton\" (click)=\"onClickCreateModule()\">Добавить модуль</button>\r\n    </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "CoursePreviewContainerComponent",
            "id": "component-CoursePreviewContainerComponent-3e789fd21255669a4c6a13384716b7f6e3e8b11a247d3034ee17711b7f840c23fb2708e33ab13084ef778d71a0196f9dcbada8a0e103f0e23028c01028ce851a",
            "file": "src/app/components/course-preview-container/course-preview-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-course-preview-container",
            "styleUrls": [
                "./course-preview-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./course-preview-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "'#FFFFFF'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "caption",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "srcCourseImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"light\" | \"dark\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickPreview",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-course-preview-container',\r\n  templateUrl: './course-preview-container.component.html',\r\n  styleUrls: ['./course-preview-container.component.scss']\r\n})\r\nexport class CoursePreviewContainerComponent implements OnInit {\r\n  @Input() title: string = '';\r\n  @Input() caption: string = '';\r\n  @Input() srcCourseImage: string = '';\r\n  @Input() theme: 'light' | 'dark' = 'light';\r\n  @Input() backgroundColor: string = '#FFFFFF';\r\n\r\n  @Output() onClickPreview = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClick(): void {\r\n    this.onClickPreview.emit();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    padding: 19px 28px 19px 57px;\r\n    border-radius: 10px;\r\n    width: 940px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    transition: .1s;\r\n}\r\n\r\n.main:hover {\r\n    scale: 1.03;\r\n    transition: .2s;\r\n    box-shadow:  -1px -1px 15px rgba(69, 69, 69, 0.07), 5px 8px 10px rgba(69, 69, 69, 0.07);\r\n}\r\n\r\n.text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 37px;\r\n}\r\n\r\n.text.light {\r\n    color: #000000;\r\n}\r\n\r\n.text.dark {\r\n    color: #FFFFFF;\r\n}\r\n\r\n.title {\r\n    font-weight: 600;\r\n    font-size: 32px;\r\n    line-height: 39px;\r\n    letter-spacing: 0.01em;\r\n}\r\n\r\n.caption {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n}\r\n\r\n.icon {\r\n    width: 162px;\r\n    height: 162px;\r\n}",
                    "styleUrl": "./course-preview-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\" style=\"background: {{backgroundColor}};\" (click)=\"onClick()\">\r\n    <div class=\"text {{theme}}\">\r\n        <div class=\"title\">{{title}}</div>\r\n        <div class=\"caption\">{{caption}}</div>\r\n    </div>\r\n    <img class=\"icon\" alt=\"course icon\" src={{srcCourseImage}} />\r\n</div>"
        },
        {
            "name": "CourseslistComponent",
            "id": "component-CourseslistComponent-95d92ab3fcc454dd35144294bf0d08c6563696626d395104564cc6d5a8efaf5fffbbe39a3105c200f27e48b625510b62c74e04884597bc3da60be133ab9dbf13",
            "file": "src/app/components/coursesList/courseslist.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-courseslist",
            "styleUrls": [
                "./courseslist.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./courseslist.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "modules",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Module[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickModuleOut",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickModule",
                    "args": [
                        {
                            "name": "moduleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "moduleId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Module } from 'src/typings/api/courseType';\r\n\r\n@Component({\r\n  selector: 'app-courseslist',\r\n  templateUrl: './courseslist.component.html',\r\n  styleUrls: ['./courseslist.component.scss']\r\n})\r\nexport class CourseslistComponent implements OnInit {\r\n  @Input() modules: Module[] = [];\r\n  @Output() onClickModuleOut = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClickModule(moduleId: string) {\r\n    this.onClickModuleOut.emit(moduleId);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 21px;\r\n}",
                    "styleUrl": "./courseslist.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-course \r\n        *ngFor=\"let module of modules\" \r\n        [currentModule]=\"module\"\r\n        (click)=\"onClickModule(module.id)\"\r\n    ></app-course>\r\n</div>\r\n"
        },
        {
            "name": "CreateContainerComponent",
            "id": "component-CreateContainerComponent-4842d86b08e09b3d72c5ffceea06f2abd2ccba3668d38907db9b91fb7e33130ac22560051bf70632f6f0b2938f1ffc0b5fee389e3eec17d82dc26e8fdb5bd464",
            "file": "src/app/components/create-container/create-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-container",
            "styleUrls": [
                "./create-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "typeContainerName",
                    "defaultValue": "'курса'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"курса\" | \"модуля\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickCreate",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-container',\r\n  templateUrl: './create-container.component.html',\r\n  styleUrls: ['./create-container.component.scss']\r\n})\r\nexport class CreateContainerComponent implements OnInit {\r\n  @Input() typeContainerName: 'курса' | 'модуля' = 'курса';\r\n  @Output() onClickCreate = new EventEmitter<string>();\r\n  inputValue = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  create(value: string): void {\r\n    this.onClickCreate.emit(value);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    width: 540px;\r\n    flex-direction: column;\r\n    gap: 64px;\r\n}\r\n\r\n.title {\r\n    font-weight: 600;\r\n    font-size: 32px;\r\n    line-height: 39px;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.nameContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n}\r\n\r\n.nameTitle {\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    line-height: 27px;\r\n    letter-spacing: 0.01em;\r\n    color: #5F5F5F;\r\n}\r\n\r\n.nameItem {\r\n    width: 100%;\r\n    height: 45px;\r\n    border: none;\r\n    border-bottom: 1px solid #3E3E3E;\r\n    outline: none;\r\n}\r\n\r\n.buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    \r\n}\r\n\r\n.cancelButton,\r\n.createButton {\r\n    border: none;\r\n    padding: 15px 0;\r\n    border-radius: 10px;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n}\r\n\r\n.cancelButton {\r\n    width: 140px;\r\n    background-color: transparent;\r\n    border: 2px solid #2E62D9;\r\n    color: #2E62D9;\r\n}\r\n\r\n.createButton {\r\n    width: 218px;\r\n    background: #FF841F;\r\n    color: #FFFFFF;\r\n}\r\n\r\n.cancelButton:hover,\r\n.createButton:hover {\r\n    opacity: .7;\r\n}",
                    "styleUrl": "./create-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"title\">Создание нового {{typeContainerName}}</div>\r\n    <div class=\"nameContainer\">\r\n        <div class=\"nameTitle\">Введите название {{typeContainerName}}</div>\r\n        <input class=\"nameItem\" [(ngModel)]=\"inputValue\"/>\r\n    </div>\r\n    <div class=\"buttons\">\r\n        <button class=\"cancelButton\">Отменить</button>\r\n        <button class=\"createButton\" (click)=\"create(inputValue)\">Создать {{typeContainerName === 'курса' ? 'курс' : 'модуль'}}</button>\r\n    </div>\r\n</div>"
        },
        {
            "name": "CreateModulePageComponent",
            "id": "component-CreateModulePageComponent-70439b8c89a89a5e3d6eee5a5ebc76f1fc0623b6246ee230938d5957c9d44cb96c85e47d3a1aa2e2fdce9c44c11f310abf024149872101dd3c8b9f52c4dfb9a0",
            "file": "src/app/pages/create-module-page/create-module-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-module-page",
            "styleUrls": [
                "./create-module-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-module-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentCourseId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "createModule",
                    "args": [
                        {
                            "name": "moduleName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "moduleName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickCreate",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { SetModuleId } from 'src/app/store/actions/module-id.action';\r\nimport { CourseIdSelector } from 'src/app/store/selectors/course-id.selector';\r\nimport { AppState } from 'src/app/store/states/app.state';\r\nimport { Module } from 'src/typings/api/courseType';\r\n\r\n@Component({\r\n  selector: 'app-create-module-page',\r\n  templateUrl: './create-module-page.component.html',\r\n  styleUrls: ['./create-module-page.component.scss']\r\n})\r\nexport class CreateModulePageComponent implements OnInit {\r\n  currentCourseId: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRouter: ActivatedRoute,\r\n    private _store: Store<AppState>,\r\n  ) {  }\r\n\r\n  ngOnInit(): void {\r\n    this._store.pipe(select(CourseIdSelector)).subscribe(id => this.currentCourseId = id)\r\n  }\r\n\r\n  async createModule(moduleName: string) {\r\n    if(!this.currentCourseId) {\r\n      this.activeRouter.queryParamMap.subscribe((param) => {\r\n         const id = param.get('courseId');\r\n         if(id) {\r\n           this.currentCourseId = id;\r\n         } else {\r\n          alert('Что то пошло не так с courseId');\r\n         }\r\n      })\r\n    }\r\n    const response = await fetch(`https://localhost:5001/api/courses/${this.currentCourseId}/modules`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        \"name\": moduleName,\r\n        \"description\": \"why?\"\r\n      }),\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    const data = await response.json() as Module;\r\n    this._store.dispatch(new SetModuleId(data.id));\r\n    return data.id;\r\n  }\r\n\r\n  async onClickCreate(name: string) {\r\n    if(name) {\r\n      const moduleId = await this.createModule(name);\r\n      // this.router.navigateByUrl('/edit-course/select-lesson-type');\r\n      this.router.navigate(['/edit-course/select-lesson-type'], {\r\n        queryParamsHandling: 'merge',\r\n        queryParams: {\r\n          moduleId: moduleId,\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    padding: 71px 170px;\r\n}",
                    "styleUrl": "./create-module-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-create-container \r\n        [typeContainerName]=\"'модуля'\" \r\n        (onClickCreate)=\"onClickCreate($event)\"\r\n    ></app-create-container>\r\n</div>"
        },
        {
            "name": "CreatePageComponent",
            "id": "component-CreatePageComponent-798eee939b261e8d69c92b286f39e2216c50d7aa3ffa27bf0b2fd3aa634f43df53a83bb986b680e484f72117c154ec8b37cb3ee3e459e5d386fbd5b4663afcdc",
            "file": "src/app/pages/create-page/create-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-page",
            "styleUrls": [
                "./create-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "createCourse",
                    "args": [
                        {
                            "name": "courseName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "courseName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickCreate",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { SetCourseId } from 'src/app/store/actions/course-id.action';\r\nimport { CourseIdSelector } from 'src/app/store/selectors/course-id.selector';\r\nimport { AppState } from 'src/app/store/states/app.state';\r\nimport { CourseType } from 'src/typings/api/courseType';\r\n\r\n@Component({\r\n  selector: 'app-create-page',\r\n  templateUrl: './create-page.component.html',\r\n  styleUrls: ['./create-page.component.scss']\r\n})\r\nexport class CreatePageComponent implements OnInit {\r\n  constructor(private router: Router, private _store: Store<AppState>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async createCourse(courseName: string) {\r\n    const response = await fetch('https://localhost:5001/api/courses', {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        \"name\": courseName,\r\n        \"description\": \"why?\"\r\n      }),\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    const data = await response.json() as CourseType;\r\n    this._store.dispatch(new SetCourseId(data.id));\r\n    return data.id\r\n  }\r\n\r\n  async onClickCreate(name: string) {\r\n    if(name) {\r\n      const currentCourseId = await this.createCourse(name);\r\n      // this.router.navigateByUrl('/create-module');\r\n      this.router.navigate(['/create-module'], {queryParams: {courseId: currentCourseId}});\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    padding: 71px 170px;\r\n}",
                    "styleUrl": "./create-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-create-container \r\n        [typeContainerName]=\"'курса'\" \r\n        (onClickCreate)=\"onClickCreate($event)\"\r\n    ></app-create-container>\r\n</div>"
        },
        {
            "name": "EditAdditionalMaterialPageComponent",
            "id": "component-EditAdditionalMaterialPageComponent-f146ba6bbc8205365007f992e727b3fd76ee21d20b762637575107cdaaaf8f7b1a6c1ce2e9a545f69bb3cb999805b9284c9e63203c77dadda4a1ecb98d3ec8e3",
            "file": "src/app/pages/edit-additional-material-page/edit-additional-material-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-additional-material-page",
            "styleUrls": [
                "./edit-additional-material-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-additional-material-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-additional-material-page',\r\n  templateUrl: './edit-additional-material-page.component.html',\r\n  styleUrls: ['./edit-additional-material-page.component.scss']\r\n})\r\nexport class EditAdditionalMaterialPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    width: 830px;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    box-sizing: border-box;\r\n    padding-bottom: 70px;\r\n}\r\n\r\n.bottomToolbar {\r\n    position: fixed;\r\n    width: 100%;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n}",
                    "styleUrl": "./edit-additional-material-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-lesson-name-container [titleName]=\"'Дополнительная литература'\"></app-lesson-name-container>\r\n    <app-additional-material-container></app-additional-material-container>\r\n    <app-text-editor \r\n        [title]=\"'Дополнительные материалы:'\"\r\n        [unicId]=\"'additional-page-type-additional-material'\"\r\n        [initHeight]=\"150\"\r\n    ></app-text-editor>\r\n    <app-bottom-edit-container class=\"bottomToolbar\"></app-bottom-edit-container>\r\n</div>\r\n"
        },
        {
            "name": "EditCoursePageComponent",
            "id": "component-EditCoursePageComponent-6c42b9f7ade19d9a2c24360070e9192ba23084f4fe38b6dcadc452fb4e0494ce0f9be623c59f14bbed9ba22ea5cbf81a8649996176d5e9f79a0a2eb65b9f330a",
            "file": "src/app/pages/edit-course-page/edit-course-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-course-page",
            "styleUrls": [
                "./edit-course-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-course-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "courseInfo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CourseType | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "currentCourseId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "currentModuleId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "createModule",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCourseInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { AppState } from 'src/app/store/states/app.state';\r\nimport { CourseType, Module } from 'src/typings/api/courseType';\r\nimport { CourseMenuItem } from 'src/typings/courseMenuItemType';\r\n\r\n@Component({\r\n  selector: 'app-edit-course-page',\r\n  templateUrl: './edit-course-page.component.html',\r\n  styleUrls: ['./edit-course-page.component.scss']\r\n})\r\nexport class EditCoursePageComponent implements OnInit {\r\n  courseInfo: CourseType | null = null;\r\n  currentCourseId: string = '';\r\n  currentModuleId: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRouter: ActivatedRoute,\r\n    private _store: Store<AppState>,\r\n  ) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activeRouter.queryParamMap.subscribe((param) => {\r\n      const courseId = param.get('courseId');\r\n      const moduleId = param.get('moduleId');\r\n      if(courseId) {\r\n        this.currentCourseId = courseId;\r\n      } \r\n      if(moduleId) {\r\n        this.currentModuleId = moduleId;\r\n      }\r\n      if(!courseId && !moduleId) {\r\n        alert('Что то не так с ids');\r\n      }\r\n   })\r\n   this.getCourseInfo();\r\n  }\r\n\r\n  async getCourseInfo() {\r\n    const response = await fetch(`https://localhost:5001/api/courses/${this.currentCourseId}`, {\r\n      credentials: 'include',\r\n    })\r\n    const data = await response.json() as CourseType;\r\n    this.courseInfo = data;\r\n  }\r\n\r\n  createModule() {\r\n    // this.router.navigateByUrl('/create-module');\r\n    this.router.navigate(['/create-module'], {queryParams: {courseId: this.currentCourseId}});\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n}\r\n\r\n.menu {\r\n    position: fixed;\r\n    height: calc(100vh - 57px);\r\n    z-index: 5;\r\n}\r\n\r\n.content {\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    box-sizing: border-box;\r\n    padding: 16px 0;\r\n    background: #ECEEF3;\r\n    align-items: center;\r\n    height: calc(100vh - 57px);\r\n    margin-left: 320px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.toolbar {\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n}\r\n\r\n",
                    "styleUrl": "./edit-course-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-course-menu \r\n        class=\"menu\"\r\n        [courseInfo]=\"courseInfo\"\r\n        (createModule)=\"createModule()\"\r\n    ></app-course-menu>\r\n    <div class=\"content\">\r\n        <app-top-toolar-container class=\"toolbar\"></app-top-toolar-container>\r\n        \r\n        <router-outlet style=\"position: absolute;\"></router-outlet>\r\n    </div>\r\n</div>"
        },
        {
            "name": "EditPresentationLessonPageComponent",
            "id": "component-EditPresentationLessonPageComponent-69d2e3b10948bcf4d1497c0917a530a8169588589b5b7ff958cb008b2316fdd05f20be18ab3d1219cec66646a76edb9bd5da3f99bda8f496ac25361b9acea3af",
            "file": "src/app/pages/edit-presentation-lesson-page/edit-presentation-lesson-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-presentation-lesson-page",
            "styleUrls": [
                "./edit-presentation-lesson-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-presentation-lesson-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-presentation-lesson-page',\r\n  templateUrl: './edit-presentation-lesson-page.component.html',\r\n  styleUrls: ['./edit-presentation-lesson-page.component.scss']\r\n})\r\nexport class EditPresentationLessonPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    width: 830px;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    box-sizing: border-box;\r\n    padding-bottom: 70px;\r\n}\r\n\r\n.bottomToolbar {\r\n    position: fixed;\r\n    width: 100%;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n}",
                    "styleUrl": "./edit-presentation-lesson-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-lesson-name-container></app-lesson-name-container>\r\n    <app-presentation-container></app-presentation-container>\r\n    <app-bottom-edit-container class=\"bottomToolbar\"></app-bottom-edit-container>\r\n</div>\r\n"
        },
        {
            "name": "EditTestLessonPageComponent",
            "id": "component-EditTestLessonPageComponent-4a26cc51278fb5ae3f702d88045b47a1ca520fe20053186c6ca6cb3c4dbbf6c87afd3f2aa7abeaa1be5608819778b4c359eb65212669aa3cb91615b95dd23bd2",
            "file": "src/app/pages/edit-test-lesson-page/edit-test-lesson-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-test-lesson-page",
            "styleUrls": [
                "./edit-test-lesson-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-test-lesson-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-test-lesson-page',\r\n  templateUrl: './edit-test-lesson-page.component.html',\r\n  styleUrls: ['./edit-test-lesson-page.component.scss']\r\n})\r\nexport class EditTestLessonPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    width: 830px;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    box-sizing: border-box;\r\n    padding-bottom: 70px;\r\n}\r\n\r\n.bottomToolbar {\r\n    position: fixed;\r\n    width: 100%;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n}",
                    "styleUrl": "./edit-test-lesson-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-lesson-name-container></app-lesson-name-container>\r\n    <app-text-editor \r\n        [title]=\"'Условие задачи:'\"\r\n        [unicId]=\"'test-lesson-type-task'\"\r\n        [initHeight]=\"50\"\r\n    ></app-text-editor>\r\n    <app-test-container></app-test-container>\r\n    <app-bottom-edit-container class=\"bottomToolbar\"></app-bottom-edit-container>\r\n</div>\r\n"
        },
        {
            "name": "EditTextLessonPageComponent",
            "id": "component-EditTextLessonPageComponent-4c3f9db7409bdd3c7fa275d85c88a12e6c4ad8c355b81573d8d67e769cb60247750fffd2fa6344ed390b6b2f60af37a3a05e4902f9de10f81c082fb967f0e6d7",
            "file": "src/app/pages/edit-text-lesson-page/edit-text-lesson-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-text-lesson-page",
            "styleUrls": [
                "./edit-text-lesson-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-text-lesson-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentCourseId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "currentModuleId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "lessonName",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "textEditorComponent",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextEditorComponent[] | null",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "TextEditorComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createLesson",
                    "args": [
                        {
                            "name": "textData",
                            "type": "OutputData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "textData",
                            "type": "OutputData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeLessonName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "testSave",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OutputData } from '@editorjs/editorjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { TextEditorComponent } from 'src/app/components/text-editor/text-editor.component';\r\nimport { AppState } from 'src/app/store/states/app.state';\r\n\r\n@Component({\r\n  selector: 'app-edit-text-lesson-page',\r\n  templateUrl: './edit-text-lesson-page.component.html',\r\n  styleUrls: ['./edit-text-lesson-page.component.scss']\r\n})\r\nexport class EditTextLessonPageComponent implements OnInit {\r\n  currentCourseId: string | null = null;\r\n  currentModuleId: string | null = null;\r\n  lessonName: string | null = null;\r\n\r\n  @ViewChildren(TextEditorComponent) textEditorComponent: TextEditorComponent[] | null = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRouter: ActivatedRoute,\r\n    private _store: Store<AppState>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activeRouter.queryParamMap.subscribe((param) => {\r\n      const courseId = param.get('courseId');\r\n      const moduleId = param.get('moduleId');\r\n      if(courseId) {\r\n        this.currentCourseId = courseId;\r\n      } \r\n      if(moduleId) {\r\n        this.currentModuleId = moduleId;\r\n      }\r\n      if(!courseId && !moduleId) {\r\n        alert('Что то не так с ids');\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeLessonName(name: string) {\r\n    this.lessonName = name;\r\n  }\r\n\r\n  async testSave() {\r\n    const textData: OutputData[] = [];\r\n    if(this.textEditorComponent) {\r\n      for(let e of this.textEditorComponent) {\r\n        const data = await e.onSave();\r\n        if(data) {\r\n          textData.push(data);\r\n        }\r\n      }\r\n    }\r\n    this.createLesson(textData)\r\n  }\r\n\r\n  async createLesson(textData: OutputData[]) {\r\n    console.log(textData)\r\n    const response = await fetch(`https://localhost:5001/api/courses/${this.currentCourseId}/modules/${this.currentModuleId}/lessons`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify([{\r\n        \"name\": this.lessonName,\r\n        \"type\": \"Text\",\r\n        \"description\": 'why?',\r\n        \"value\": {\r\n            time: textData[0].time,\r\n            version: textData[0].version,\r\n            blocks: textData[0].blocks,\r\n          }\r\n        }\r\n      ]),\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    if(response.ok) {\r\n      console.log('lesson created');\r\n    } else {\r\n      console.log('lesson not created');\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    width: 830px;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    box-sizing: border-box;\r\n    padding-bottom: 70px;\r\n}\r\n\r\n.bottomToolbar {\r\n    position: fixed;\r\n    width: 100%;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n}",
                    "styleUrl": "./edit-text-lesson-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-lesson-name-container\r\n        [titleName]=\"lessonName\"\r\n        (changeLessonName)=\"onChangeLessonName($event)\"\r\n    ></app-lesson-name-container>\r\n    <app-text-editor [unicId]=\"'text-lesson-type'\"></app-text-editor>\r\n    <app-text-editor \r\n        [title]=\"'Дополнительные материалы:'\"\r\n        [unicId]=\"'text-lesson-type-additional'\"\r\n        [initHeight]=\"150\"\r\n    ></app-text-editor>\r\n    <app-bottom-edit-container\r\n        class=\"bottomToolbar\"\r\n        (saveLesson)=\"testSave()\"\r\n    ></app-bottom-edit-container>\r\n</div>\r\n"
        },
        {
            "name": "EditVideoLessonPageComponent",
            "id": "component-EditVideoLessonPageComponent-ca879cd539082c84c8720075a8b49a82028f12eeccf310340b9ffd64d8a3d74e1693cecb2f1694a0a95ed03a113d12498341b0e92a89489eb77bd7c2fd5c2e13",
            "file": "src/app/pages/edit-video-lesson-page/edit-video-lesson-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-video-lesson-page",
            "styleUrls": [
                "./edit-video-lesson-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-video-lesson-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-video-lesson-page',\r\n  templateUrl: './edit-video-lesson-page.component.html',\r\n  styleUrls: ['./edit-video-lesson-page.component.scss']\r\n})\r\nexport class EditVideoLessonPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    width: 830px;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    box-sizing: border-box;\r\n    padding-bottom: 70px;\r\n}\r\n\r\n.bottomToolbar {\r\n    position: fixed;\r\n    width: 100%;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n}",
                    "styleUrl": "./edit-video-lesson-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-lesson-name-container></app-lesson-name-container>\r\n    <app-video-container></app-video-container>\r\n    <app-text-editor \r\n        [title]=\"'Дополнительные материалы:'\"\r\n        [unicId]=\"'video-page-type-additional-material'\"\r\n        [initHeight]=\"250\"\r\n    ></app-text-editor>\r\n    <app-bottom-edit-container class=\"bottomToolbar\"></app-bottom-edit-container>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-5758ad21eba4098bdddd849fe83be420a5c30f47f2068a8b7715b5bf333be746bc99e4c9e57f57d881751916a0e8f6bc4cef8099d2185120f1d1d90516490ee9",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onClickCreateCourse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClickHome",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "createCourse",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toHome",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Output() onClickCreateCourse = new EventEmitter();\r\n  @Output() onClickHome = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createCourse(): void {\r\n    this.onClickCreateCourse.emit();\r\n  }\r\n\r\n  toHome(): void {\r\n    this.onClickHome.emit();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    height: 57px;\r\n    box-sizing: border-box;\r\n    padding: 16px 32px 16px 48px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: #2E62D9;\r\n    color: #FFFFFF;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    gap: 48px;\r\n    align-items: center;\r\n}\r\n\r\n.logo {\r\n    width: 72px;\r\n    height: 25px;\r\n    background: url('./icons/logo.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n    cursor: pointer;\r\n}\r\n\r\n.createButton {\r\n    box-sizing: border-box;\r\n    padding: 8px 28px;\r\n    border: none;\r\n    background: #FFFFFF;\r\n    border-radius: 10px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    letter-spacing: 0.01em;\r\n    color: #5F5F5F;\r\n    cursor: pointer;\r\n}\r\n\r\n.createButton:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.notification {\r\n    width: 20px;\r\n    height: 25px;\r\n    background: url('./icons/notificationIcon.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.userContainer {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n}\r\n\r\n.userIcon {\r\n    width: 22px;\r\n    height: 25px;\r\n    background: url('./icons/userIcon.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"container\">\r\n        <div class=\"logo\" (click)=\"toHome()\"></div>\r\n        <button class=\"createButton\" (click)=\"createCourse()\">Создать курс</button>\r\n    </div>\r\n    <div class=\"container\">\r\n        <div class=\"notification\"></div>\r\n        <div class=\"userContainer\">\r\n            <div class=\"userIcon\"></div>\r\n            <div class=\"userName\">Login Admin</div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "HeaderCourseComponent",
            "id": "component-HeaderCourseComponent-ae2bc5c4c37431e45d440d5df45cd74e79bdb687348a2770f9074cdca6172a85c704bbdedb9334cc46958d89736c2f012d3ed3faf4d291da0482939037aeed50",
            "file": "src/app/components/coursesList/components/course/components/header-course/header-course.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header-course",
            "styleUrls": [
                "./header-course.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-course.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-course',\r\n  templateUrl: './header-course.component.html',\r\n  styleUrls: ['./header-course.component.scss']\r\n})\r\nexport class HeaderCourseComponent implements OnInit {\r\n  @Input() title: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    padding: 12px 20px 20px 0px;\r\n    background: radial-gradient(110.83% 110.83% at 11.31% 77.5%, rgba(46, 98, 217, 0.1) 0%, rgba(255, 255, 255, 0) 100%);\r\n\r\n    border-bottom: 1px solid rgba(62, 62, 62, .5);\r\n}\r\n\r\n.titleContainer {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n}\r\n\r\n.title {\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    line-height: 27px;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.editIcon {\r\n    width: 16px;\r\n    height: 16px;\r\n    background: url('icons/edit.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.removeIcon {\r\n    width: 16px;\r\n    height: 22px;\r\n    background: url('icons/remove.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}",
                    "styleUrl": "./header-course.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"titleContainer\">\r\n        <div class=\"title\">{{title}}</div>\r\n        <div class=\"editIcon\"></div>\r\n    </div>\r\n    <div class=\"removeIcon\"></div>\r\n</div>\r\n"
        },
        {
            "name": "ItemCourseComponent",
            "id": "component-ItemCourseComponent-4341a4c7fb2962bad0e3ecf360f182b14b895e69cc0d2f5320e33cb8219c53262c45de0c8d313e5ab0d5d470f75f0b13b422e5550e313e9ba9bd6a24a160863d",
            "file": "src/app/components/coursesList/components/course/components/item-course/item-course.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-course",
            "styleUrls": [
                "./item-course.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-course.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-item-course',\r\n  templateUrl: './item-course.component.html',\r\n  styleUrls: ['./item-course.component.scss']\r\n})\r\nexport class ItemCourseComponent implements OnInit {\r\n  @Input() title: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid rgba(62, 62, 62, .5);\r\n}\r\n\r\n.title {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n    color: #5F5F5F;\r\n}",
                    "styleUrl": "./item-course.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"title\">{{title}}</div>\r\n</div>\r\n"
        },
        {
            "name": "LessonNameContainerComponent",
            "id": "component-LessonNameContainerComponent-f5dad1104dd8feab4935908263017a60d353dffb74aaf0d49801fa8b081e75cdbd5c336ca260c658037c75f5d9079c68dc6b677660481bc7ecd43b4e1129ea4f",
            "file": "src/app/components/lesson-name-container/lesson-name-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-name-container",
            "styleUrls": [
                "./lesson-name-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-name-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titleName",
                    "defaultValue": "'Название урока'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changeLessonName",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeName",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lesson-name-container',\r\n  templateUrl: './lesson-name-container.component.html',\r\n  styleUrls: ['./lesson-name-container.component.scss']\r\n})\r\nexport class LessonNameContainerComponent implements OnInit {\r\n  @Input() titleName: string | null = 'Название урока';\r\n  @Output() changeLessonName = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onChangeName(name: string) {\r\n    this.changeLessonName.emit(name);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.nameInput {\r\n    width: 578px;\r\n    height: 47px;\r\n\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    line-height: 27px;\r\n    letter-spacing: 0.01em;\r\n    color: #5F5F5F;\r\n\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 1px solid #5F5F5F;\r\n    background-color: transparent;\r\n}\r\n\r\n.delete {\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    padding: 10px 20px;\r\n    border: 1px solid #FA5D48;\r\n    border-radius: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n    letter-spacing: 0.015em;\r\n    color: #FA5D48;\r\n}\r\n\r\n.delete:hover {\r\n    opacity: .7;\r\n}",
                    "styleUrl": "./lesson-name-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <input\r\n        class=\"nameInput\" \r\n        placeholder=\"Название урока\"\r\n        [(ngModel)]=\"titleName\" \r\n        #item (change)=\"onChangeName(item.value)\"\r\n    />\r\n    <button class=\"delete\">Удалить урок</button>\r\n</div>"
        },
        {
            "name": "LessonTypeComponent",
            "id": "component-LessonTypeComponent-ce13ae35e5ec4ff65247a4a97d0a6fc60b2693a200905e6b6c15d57807b04fff984d15966ca652c12dbb5984bd5197ef55ffc63ac63b1ed5fef4e3ab8cc914ca",
            "file": "src/app/components/lesson-type/lesson-type.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-type",
            "styleUrls": [
                "./lesson-type.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-type.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "LessonType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelectLessonType",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "typeData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { LessonType } from 'src/typings/lessonType';\r\n\r\nconst typeData: {[key in LessonType]: {\r\n  title: string;\r\n  caption: string;\r\n}} = {\r\n  literature: {\r\n    title: 'Литература',\r\n    caption: 'Добавляйте ссылки на книги и источники  '\r\n  },\r\n  presentation: {\r\n    title: 'Презентация',\r\n    caption: 'Создавайте презентации и озвучивайте их '\r\n  },\r\n  test: {\r\n    title: 'Тест',\r\n    caption: 'Составляйте тесты для проверки знаний'\r\n  },\r\n  text: {\r\n    title: 'Текст',\r\n    caption: 'Добавляйте текст и изображения для ваших лекций'\r\n  },\r\n  video: {\r\n    title: 'Видео',\r\n    caption: 'Добавляйте уже готовые видео уроки'\r\n  },\r\n}\r\n\r\n@Component({\r\n  selector: 'app-lesson-type',\r\n  templateUrl: './lesson-type.component.html',\r\n  styleUrls: ['./lesson-type.component.scss']\r\n})\r\n\r\nexport class LessonTypeComponent implements OnInit {\r\n  @Input() type: LessonType = 'text';\r\n  @Output() onSelectLessonType = new EventEmitter();\r\n\r\n  typeData: { title: string; caption: string; };\r\n  constructor() {\r\n    this.typeData = typeData[this.type]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.typeData = typeData[this.type]\r\n  }\r\n\r\n  onClick(): void {\r\n    this.onSelectLessonType.emit();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    width: 306px;\r\n    display: flex;\r\n    gap: 20px;\r\n    box-sizing: border-box;\r\n    padding: 15px 20px;\r\n    background: #FFFFFF;\r\n    box-shadow: -1px -1px 15px rgba(69, 69, 69, 0.07), 5px 8px 10px rgba(69, 69, 69, 0.07);\r\n    border-radius: 10px;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    transition: .1s;\r\n}\r\n\r\n.main:hover {\r\n    scale: 1.1;\r\n    transition: .2s;\r\n}\r\n\r\n.icon {\r\n    width: 70px;\r\n    height: 70px;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.icon.text {\r\n    background: url('icons/icons=text.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.icon.video {\r\n    background: url('icons/icons=video.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.icon.literature {\r\n    background: url('icons/icons=book.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.icon.test {\r\n    background: url('icons/icons=test.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.icon.presentation {\r\n    background: url('icons/icons=presentation.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.icon.text,\r\n.icon.video,\r\n.icon.literature,\r\n.icon.test,\r\n.icon.presentation {\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n}\r\n\r\n.title {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.caption {\r\n    width: 176px;\r\n    height: 88px;\r\n    vertical-align: middle;\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    letter-spacing: 0.015em;\r\n    color: #5F5F5F;\r\n}",
                    "styleUrl": "./lesson-type.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 40
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\" (click)=\"onClick()\">\r\n    <div class=\"icon {{type}}\"></div>\r\n    <div class=\"text\">\r\n        <div class=\"title\">{{typeData.title}}</div>\r\n        <div class=\"caption\">{{typeData.caption}}</div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "LessonTypePageComponent",
            "id": "component-LessonTypePageComponent-cec1c67c7b94f147d80989ecd954d91b7104c4f8b3008221e9722658ef19293f8294f9274cffa7e34dc72b049e7e93f19faceeff90c464c80f2010f7be9c96b2",
            "file": "src/app/pages/lesson-type-page/lesson-type-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-type-page",
            "styleUrls": [
                "./lesson-type-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-type-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentCourseId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "currentModuleId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToCreateAdditionalMaterialLesson",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToCreatePresentationLesson",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToCreateTestLesson",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToCreateTextLesson",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToCreateVideoLesson",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/states/app.state';\r\n\r\n@Component({\r\n  selector: 'app-lesson-type-page',\r\n  templateUrl: './lesson-type-page.component.html',\r\n  styleUrls: ['./lesson-type-page.component.scss']\r\n})\r\nexport class LessonTypePageComponent implements OnInit {\r\n  currentCourseId: string = '';\r\n  currentModuleId: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRouter: ActivatedRoute,\r\n    private _store: Store<AppState>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activeRouter.queryParamMap.subscribe((param) => {\r\n      const courseId = param.get('courseId');\r\n      const moduleId = param.get('moduleId');\r\n      if(courseId) {\r\n        this.currentCourseId = courseId;\r\n      } \r\n      if(moduleId) {\r\n        this.currentModuleId = moduleId;\r\n      }\r\n      if(!courseId && !moduleId) {\r\n        alert('Что то не так с ids');\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  navigateToCreateTextLesson(): void {\r\n    this.router.navigate(['/edit-course/edit-text-lesson'], {queryParamsHandling: 'preserve'});\r\n  }\r\n\r\n  navigateToCreateTestLesson(): void {\r\n    this.router.navigateByUrl('/edit-course/edit-test-lesson');\r\n  }\r\n\r\n  navigateToCreateAdditionalMaterialLesson(): void {\r\n    this.router.navigateByUrl('/edit-course/edit-add-material-lesson');\r\n  }\r\n\r\n  navigateToCreateVideoLesson(): void {\r\n    this.router.navigateByUrl('/edit-course/edit-video-lesson');\r\n  }\r\n\r\n  navigateToCreatePresentationLesson(): void {\r\n    this.router.navigateByUrl('/edit-course/edit-presentation-lesson');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".selectType {\r\n    display: flex;\r\n    width: 830px;\r\n    flex-direction: column;\r\n    gap: 35px;\r\n    box-sizing: border-box;\r\n    padding: 30px 84px;\r\n    align-items: center;\r\n}\r\n\r\n.title {\r\n    font-weight: 600;\r\n    font-size: 32px;\r\n    line-height: 39px;\r\n    text-align: center;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n    user-select: none;\r\n}\r\n\r\n.lessonsTypes {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    column-gap: 50px;\r\n    row-gap: 22px;\r\n}",
                    "styleUrl": "./lesson-type-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"selectType\">\r\n    <div class=\"title\">Выберите тип урока </div>\r\n    <div class=\"lessonsTypes\">\r\n        <app-lesson-type [type]=\"'text'\" (onSelectLessonType)=\"navigateToCreateTextLesson()\"></app-lesson-type>\r\n        <app-lesson-type [type]=\"'presentation'\" (onSelectLessonType)=\"navigateToCreatePresentationLesson()\"></app-lesson-type>\r\n        <app-lesson-type [type]=\"'video'\" (onSelectLessonType)=\"navigateToCreateVideoLesson()\"></app-lesson-type>\r\n        <app-lesson-type [type]=\"'test'\" (onSelectLessonType)=\"navigateToCreateTestLesson()\"></app-lesson-type>\r\n        <app-lesson-type [type]=\"'literature'\" (onSelectLessonType)=\"navigateToCreateAdditionalMaterialLesson()\"></app-lesson-type>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ModuleItemComponent",
            "id": "component-ModuleItemComponent-b6854b52b69b53e4856555fdf2cc78d4f98a95ba7a437a3b2bcb73beeb7d87e769ccc3e9d1c574fd316576f812caa3912c4107c417ccc21f9e2086a96978c136",
            "file": "src/app/components/course-menu/components/module-item/module-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-module-item",
            "styleUrls": [
                "./module-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./module-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-module-item',\r\n  templateUrl: './module-item.component.html',\r\n  styleUrls: ['./module-item.component.scss']\r\n})\r\nexport class ModuleItemComponent implements OnInit {\r\n  @Input() title: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    padding: 14px 16px;\r\n    flex-shrink: 0;\r\n    cursor: pointer;\r\n}\r\n\r\n.title {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n    color: #000000;\r\n}\r\n\r\n.editIcon {\r\n    cursor: pointer;\r\n    width: 16px;\r\n    height: 16px;\r\n    background: url('icons/edit.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.editIcon:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.main:hover {\r\n    .title {\r\n        opacity: .7;\r\n    }\r\n}",
                    "styleUrl": "./module-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"title\">{{title}}</div>\r\n    <div class=\"editIcon\"></div>\r\n</div>"
        },
        {
            "name": "PresentationContainerComponent",
            "id": "component-PresentationContainerComponent-ef2ce278285fd48c713775c042d441dc20305abe39ecb6a56716bc8450d140a8f635e889092e45d2cfb7f16007c8ac5c1294eaa4783e549464802ccd9df99930",
            "file": "src/app/components/presentation-container/presentation-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-presentation-container",
            "styleUrls": [
                "./presentation-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./presentation-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-presentation-container',\r\n  templateUrl: './presentation-container.component.html',\r\n  styleUrls: ['./presentation-container.component.scss']\r\n})\r\nexport class PresentationContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 594px;\r\n\r\n    background: #FFFFFF;\r\n    border-radius: 10px;\r\n}\r\n\r\n.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 32px;\r\n    height: 100%;\r\n}\r\n\r\n.button {\r\n    box-sizing: border-box;\r\n    padding: 15px 25px;\r\n    border: none;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n}\r\n\r\n.button:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.button.create {\r\n    background: #FF841F;\r\n    color: #FFFFFF;\r\n}\r\n\r\n.button.addCreated {\r\n    border: 1px solid #2E62D9;\r\n    color: #2E62D9;\r\n}\r\n\r\n.toolbar {\r\n    display: flex;\r\n    height: 120px;\r\n    box-sizing: border-box;\r\n    padding: 10px 20px;\r\n    align-items: center;\r\n    gap: 45px;\r\n    box-shadow: 0px -4px 10px rgba(69, 69, 69, 0.07);\r\n    border-radius: 10px;\r\n}\r\n\r\n.navigateButton {\r\n    width: 28px;\r\n    height: 28px;\r\n    background-color: transparent;\r\n    border: none;\r\n    background: url('./icons/icons_left.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n    cursor: pointer;\r\n}\r\n\r\n.navigateButton.next {\r\n    transform: rotate(180deg);\r\n}\r\n\r\n.items {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.item {\r\n    display: flex;\r\n    width: 140px;\r\n    height: 100px;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.item.add {\r\n    background: url('./icons/add.svg') 50% 50% no-repeat;\r\n    background-size: 20px 20px;\r\n    background-color: #ECEEF3;\r\n    cursor: pointer;\r\n}",
                    "styleUrl": "./presentation-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-presentation-top-toolbar></app-presentation-top-toolbar>\r\n    <div class=\"content\">\r\n        <button class=\"button create\">Создать новую презентацию</button>\r\n        <button class=\"button addCreated\">Добавить готовую презентацию</button>\r\n    </div>\r\n    <div class=\"toolbar\">\r\n        <button class=\"navigateButton prev\"></button>\r\n        <div class=\"items\">\r\n            <div class=\"item add\"></div>\r\n        </div>\r\n        <button class=\"navigateButton next\"></button>\r\n    </div>\r\n</div>"
        },
        {
            "name": "PresentationTopToolbarComponent",
            "id": "component-PresentationTopToolbarComponent-026359969bd97d80d7df7aac9d620dfcce464f333f648f5630156f18b995cff9568e197ff31a6d439eb8fd728e028b4b9556fe435bd08f2a1c440e8554bdee94",
            "file": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-presentation-top-toolbar",
            "styleUrls": [
                "./presentation-top-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./presentation-top-toolbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isBeforeRecord",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isDoneRecord",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isRecord",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-presentation-top-toolbar',\r\n  templateUrl: './presentation-top-toolbar.component.html',\r\n  styleUrls: ['./presentation-top-toolbar.component.scss']\r\n})\r\nexport class PresentationTopToolbarComponent implements OnInit {\r\n  isBeforeRecord = true;\r\n  isRecord = false;\r\n  isDoneRecord = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    height: 52px;\r\n    box-sizing: border-box;\r\n    padding: 0 16px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    background: #FFFFFF;\r\n    box-shadow: 0px 2px 10px rgba(69, 69, 69, 0.07);\r\n    border-radius: 10px 10px 0px 0px;\r\n}\r\n\r\n.button {\r\n    cursor: pointer;\r\n}\r\n\r\n.button:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.uploadButton {\r\n    width: 30px;\r\n    height: 30px;\r\n    background: url('./icons/icons_add_photo\\ 2.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.rightPart {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n}\r\n\r\n.recordButton {\r\n    width: 32px;\r\n    height: 32px;\r\n    background: url('./icons/icons_micro\\ 1.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.removeButton {\r\n    width: 30px;\r\n    height: 30px;\r\n    background: url('./icons/icons_delete.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.doneButton {\r\n    width: 24px;\r\n    height: 24px;\r\n    background: url('./icons/icons_done\\ 1.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.recordSetting {\r\n    display: flex;\r\n    gap: 12px;\r\n    align-items: center;\r\n}\r\n\r\n.closeRecord {\r\n    width: 24px;\r\n    height: 24px;\r\n    background: url('./icons/icons_close\\ 1.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.player {\r\n    display: flex;\r\n    gap: 8px;\r\n    box-sizing: border-box;\r\n    padding: 8px 16px;\r\n    align-items: center;\r\n}\r\n\r\n.playStopButton {\r\n    width: 52px;\r\n    height: 52px;\r\n    background: url('./icons/stop.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.playStopButton.play {\r\n    width: 52px;\r\n    height: 52px;\r\n    background: url('./icons/play.svg') 50% 50% no-repeat;\r\n    background-size: 100% 100%;\r\n}",
                    "styleUrl": "./presentation-top-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"uploadButton button\"></div>\r\n    <div class=\"rightPart\">\r\n        <div *ngIf=\"isBeforeRecord\" class=\"recordButton button\"></div>\r\n        <div *ngIf=\"isRecord || isDoneRecord\" class=\"recordSetting\">\r\n            <div *ngIf=\"isRecord\" class=\"closeRecord button\"></div>\r\n            <div class=\"player\">\r\n                <div class=\"time\">23:59:59</div>\r\n                <div class=\"timeLine\"></div>\r\n                <div [class.play]=\"isDoneRecord\" class=\"playStopButton button\"></div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isRecord\" class=\"doneButton button\"></div>\r\n        <div *ngIf=\"isDoneRecord\" class=\"removeButton button\"></div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "StartPageComponent",
            "id": "component-StartPageComponent-af248fa33698e8cf4174e4bcad686367c58570d5422fbb9cfcca5b2f6efd89de3cf52e58d47f283f5250a33b2d7e01449c2606a60c97e0ced85621981c956a1c",
            "file": "src/app/pages/start-page/start-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-start-page",
            "styleUrls": [
                "./start-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./start-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "courses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CourseType[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "getCourses",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickCourse",
                    "args": [
                        {
                            "name": "courseId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "courseId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { SetCourseId } from 'src/app/store/actions/course-id.action';\r\nimport { AppState } from 'src/app/store/states/app.state';\r\nimport { CourseType } from 'src/typings/api/courseType';\r\n\r\n@Component({\r\n  selector: 'app-start-page',\r\n  templateUrl: './start-page.component.html',\r\n  styleUrls: ['./start-page.component.scss']\r\n})\r\nexport class StartPageComponent implements OnInit {\r\n  courses: CourseType[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRouter: ActivatedRoute,\r\n    private _store: Store<AppState>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n\r\n  async getCourses() {\r\n    const response = await fetch(`https://localhost:5001/api/courses`, {\r\n      credentials: 'include',\r\n    })\r\n    const data = await response.json() as CourseType[];\r\n    this.courses = data;\r\n  }\r\n\r\n  onClickCourse(courseId: string): void {\r\n    this._store.dispatch(new SetCourseId(courseId));\r\n    this.router.navigate(['/course-content'], {queryParams: { courseId }});\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 40px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 88px 0;\r\n}",
                    "styleUrl": "./start-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRouter",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <app-course-preview-container *ngFor=\"let course of courses; index as i\"\r\n        [title]=\"course.name\"\r\n        [caption]=\"course.description\"\r\n        [srcCourseImage]=\"i % 2 === 0 ? 'assets/image/jsIcon.svg' : 'assets/image/netIcon.svg'\"\r\n        [theme]=\"i % 2 === 0 ? 'light' : 'dark'\"\r\n        [backgroundColor]=\"i % 2 === 0 ? '#F7DF1E' : '#512BD4'\"\r\n        (onClickPreview)=\"onClickCourse(course.id)\"\r\n    ></app-course-preview-container>\r\n</div>"
        },
        {
            "name": "TestContainerComponent",
            "id": "component-TestContainerComponent-2fe344bee1df9e036410cbcd75c70e8d95bd9d6109861b59b8e35a78c77798a5978e82ed3967d1d9ddcc40dfb4b19d220786b359f9a1695eb4142f2b30cd97e4",
            "file": "src/app/components/test-container/test-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-test-container",
            "styleUrls": [
                "./test-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./test-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test-container',\r\n  templateUrl: './test-container.component.html',\r\n  styleUrls: ['./test-container.component.scss']\r\n})\r\nexport class TestContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    padding: 16px;\r\n    gap: 16px;\r\n    background: #FFFFFF;\r\n    border-radius: 10px;\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n}\r\n\r\n.title {\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    line-height: 27px;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.answerTypeContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 4px;\r\n}\r\n\r\n.titleAnswerType {\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n    line-height: 22px;\r\n    letter-spacing: 0.015em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.optionsContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n}\r\n\r\n.optionsTitle {\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n    letter-spacing: 0.015em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.options {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n}\r\n\r\n.addOptionButton {\r\n    margin-right: auto;\r\n    margin-top: 8px;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    padding: 15px 25px;\r\n    color: #FFFFFF;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    letter-spacing: 0.01em;\r\n    background: #FF841F;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n}\r\n\r\n.addOptionButton:hover {\r\n    opacity: .7;\r\n}\r\n",
                    "styleUrl": "./test-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">Варианты ответов:</div>\r\n        <div class=\"answerTypeContainer\">\r\n            <div class=\"titleAnswerType\">Количество правильных ответов:</div>\r\n            <app-test-type-buttons></app-test-type-buttons>\r\n        </div>\r\n    </div>\r\n    <div class=\"optionsContainer\">\r\n        <div class=\"optionsTitle\">Добавьте варианты ответа и отметьте правильный:</div>\r\n        <div class=\"options\">\r\n            <app-answer-option [type]=\"'radio'\"></app-answer-option>\r\n            <app-answer-option [type]=\"'radio'\"></app-answer-option>\r\n        </div>\r\n    </div>\r\n    <button class=\"addOptionButton\">Добавить</button>\r\n</div>"
        },
        {
            "name": "TestTypeButtonsComponent",
            "id": "component-TestTypeButtonsComponent-e711916c50438304ed03ddef9ec4567538aa53dc8fda60bb45ab060242d63859982a2f2a8686101009be132f3ec33938b086c908dfd85ac0bb8afff31de649e4",
            "file": "src/app/components/test-type-buttons/test-type-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-test-type-buttons",
            "styleUrls": [
                "./test-type-buttons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./test-type-buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActiveRadio",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test-type-buttons',\r\n  templateUrl: './test-type-buttons.component.html',\r\n  styleUrls: ['./test-type-buttons.component.scss']\r\n})\r\nexport class TestTypeButtonsComponent implements OnInit {\r\n  @Input() isActiveRadio: boolean = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: inline-flex;\r\n    background: #ECEEF3;\r\n    border-radius: 10px;\r\n    height: 38px;\r\n}\r\n\r\n.button {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    padding: 8px 16px;\r\n    border: none;\r\n    background-color: transparent;\r\n    user-select: none;\r\n    cursor: pointer;\r\n\r\n    font-size: 12px;\r\n    line-height: 22px;\r\n    letter-spacing: 0.015em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n\r\n.radio-icon {\r\n    background: url('./icons/radio.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.checkbox-icon {\r\n    background: url('./icons/checkbox.svg') 50% 50% no-repeat;\r\n}\r\n\r\n.radio-icon,\r\n.checkbox-icon {\r\n    width: 20px;\r\n    height: 20px;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.active {\r\n    background: #FFFFFF;\r\n    box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n}",
                    "styleUrl": "./test-type-buttons.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <button [class.active]=\"isActiveRadio\" class=\"button radio\" >\r\n        <div class=\"radio-icon\"></div>\r\n        <div class=\"radio-title\">Один</div>\r\n    </button>\r\n    <button [class.active]=\"!isActiveRadio\" class=\"button checkbox\">\r\n        <div class=\"checkbox-icon\"></div>\r\n        <div class=\"checkbox-title\">Несколько</div>\r\n    </button>\r\n</div>"
        },
        {
            "name": "TextEditorComponent",
            "id": "component-TextEditorComponent-8afd473d7ba4d6c0f265a188d412d28067d087b72ee881d5164aeaeaeda7a9a2e99eed51930c31c19b856ed8aac38e6872feb856631ffa8f38610b6e83e66dbb",
            "file": "src/app/components/text-editor/text-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-editor",
            "styleUrls": [
                "./text-editor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editData",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "OutputData | null",
                    "decorators": []
                },
                {
                    "name": "initHeight",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "test",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "() => void",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "unicId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickSave",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editor",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EditorJS | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n//@ts-ignore\r\nimport Header from '@editorjs/header';\r\n//@ts-ignore\r\nimport List from '@editorjs/list';\r\n//@ts-ignore\r\nimport Marker from '@editorjs/marker';\r\nimport EditorJS, { OutputData } from '@editorjs/editorjs';\r\n\r\n@Component({\r\n  selector: 'app-text-editor',\r\n  templateUrl: './text-editor.component.html',\r\n  styleUrls: ['./text-editor.component.scss']\r\n})\r\nexport class TextEditorComponent implements OnInit {\r\n  @Input() title: string = '';\r\n  @Input() unicId: string = '';\r\n  @Input() initHeight: number = 300;\r\n  @Input() editData: OutputData | null = null;\r\n  @Output() onClickSave = new EventEmitter();\r\n  @Input() test = () => {};\r\n\r\n  editor: EditorJS | null = null;\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.editor = new EditorJS({\r\n      holder: `editor-js ${this.unicId}`,\r\n      tools: {\r\n        header: {\r\n          class: Header,\r\n          inlineToolbar: ['link']\r\n        },\r\n        list: {\r\n          class: List,\r\n          inlineToolbar: ['link', 'bold']\r\n        },\r\n        marker: {\r\n          class: Marker,\r\n          shortcut: 'CMD+SHIFT+M',\r\n        }\r\n      },\r\n      minHeight: this.initHeight,\r\n    })\r\n    if(this.editData) {\r\n      // this.editor.render({})\r\n    }\r\n  }\r\n\r\n  async onSave() {\r\n    const resultData = await this.editor?.save();\r\n    if(resultData) {\r\n      return resultData;\r\n    }\r\n    return null;    \r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    background: #FFFFFF;\r\n    border-radius: 10px;\r\n    box-sizing: border-box;\r\n    padding: 16px;\r\n}\r\n\r\n.title {\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    line-height: 27px;\r\n    letter-spacing: 0.01em;\r\n    color: #3E3E3E;\r\n}\r\n\r\n.editor {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n}",
                    "styleUrl": "./text-editor.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div *ngIf=\"title\" class=\"title\">{{title}}</div>\r\n    <div id=\"editor-js {{unicId}}\" class=\"editor\"></div>\r\n</div>"
        },
        {
            "name": "TopToolarContainerComponent",
            "id": "component-TopToolarContainerComponent-9ce116ab097e88faa0e38bc751d6a6348f2db705331e861d68555a8a5f3af138598ccaa5c9b4662ac235fb50d5f8e318ee986cbd2f5e0636bc9c75a1622e64a2",
            "file": "src/app/components/top-toolar-container/top-toolar-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-toolar-container",
            "styleUrls": [
                "./top-toolar-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./top-toolar-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-toolar-container',\r\n  templateUrl: './top-toolar-container.component.html',\r\n  styleUrls: ['./top-toolar-container.component.scss']\r\n})\r\nexport class TopToolarContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    max-width: 830px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 12px 16px;\r\n    gap: 12px;\r\n    align-items: center;\r\n    background: #FFFFFF;\r\n    box-shadow: -1px -1px 15px rgba(69, 69, 69, 0.07), 5px 8px 10px rgba(69, 69, 69, 0.07);\r\n    border-radius: 10px;\r\n}\r\n\r\n.squareLesson,\r\n.addNewLessonButton {\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.squareLesson:hover,\r\n.addNewLessonButton:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.squareLesson {\r\n    width: 35px;\r\n    height: 35px;\r\n    // background: url('icons/addIcon.svg') 50% 50% no-repeat;\r\n    background-size: 16px 16px;\r\n    background-color: rgba(46, 98, 217, 1);\r\n    border-radius: 3px;\r\n}\r\n\r\n.addNewLessonButton {\r\n    border-radius: 3px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 5px 10px;\r\n    box-sizing: border-box;\r\n    gap: 10px;\r\n    background: #FF841F;\r\n    color: #FFFFFF;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n    letter-spacing: 0.015em;\r\n}\r\n\r\n.addIcon {\r\n    width: 22px;\r\n    height: 25px;\r\n    background: url('icons/addIcon.svg') 50% 50% no-repeat;\r\n    background-size: 16px 16px;\r\n}",
                    "styleUrl": "./top-toolar-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <button class=\"squareLesson\"></button>\r\n    <button class=\"addNewLessonButton\">\r\n        <div class=\"addIcon\"></div>\r\n        <div class=\"caption\">Добавить новый урок</div>\r\n    </button>\r\n</div>"
        },
        {
            "name": "VideoContainerComponent",
            "id": "component-VideoContainerComponent-8caf26b84338eda0875ed1acfe7d73664d4ccc58865b84a47c63c7c8a6c1742823896e2a2b41e2b9973e12440c5d190ed020df28b72fe000b9785a5898108252",
            "file": "src/app/components/video-container/video-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-video-container",
            "styleUrls": [
                "./video-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./video-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-video-container',\r\n  templateUrl: './video-container.component.html',\r\n  styleUrls: ['./video-container.component.scss']\r\n})\r\nexport class VideoContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    padding: 32px 16px;\r\n    background: #FFFFFF;\r\n    border-radius: 10px;\r\n    gap: 24px;\r\n}\r\n\r\n.inputContainer {\r\n\r\n}\r\n\r\n.inputComponent {\r\n    display: none;\r\n}\r\n\r\n.labelInput {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 323px;\r\n    height: 50px;\r\n    background: #FF841F;\r\n    border-radius: 10px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: 0.01em;\r\n    color: #FFFFFF;\r\n    cursor: pointer;\r\n}\r\n\r\n.labelInput:hover {\r\n    opacity: .7;\r\n}\r\n\r\n.inputHref {\r\n    width: 566px;\r\n    height: 47px;\r\n    border: none;\r\n    border-bottom: 1px solid #000000;\r\n    outline: none;\r\n}",
                    "styleUrl": "./video-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\r\n    <div class=\"inputContainer\">\r\n        <input type=\"file\" class=\"inputComponent\" id=\"add-video-file\"/>\r\n        <label class=\"labelInput\" for=\"add-video-file\">Загрузить видео</label>\r\n    </div>\r\n    <input class=\"inputHref\" type=\"url\" placeholder=\"Вставить ссылку на видео\"/>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-c4ec0ff332691ad322be30665ebe104b6764a16e5cdb8d0a3ba9f268ea5de61ee9168fbfc12cb654f3d6fd8646aefb4183475a0467b35659cb62e3a1e8643adb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { CourseMenuModule } from './components/course-menu/course-menu.module';\r\nimport { StartPageModule } from './pages/start-page/start-page.module';\r\nimport { CreatePageModule } from './pages/modules/create-page-module/create-page-module.module';\r\nimport { CourseContentPageModule } from './pages/course-content-page/course-content-page.module';\r\nimport { EditCoursePageModule } from './pages/edit-course-page/edit-course-page.module';\r\nimport { EditPresentationLessonPageComponent } from './pages/edit-presentation-lesson-page/edit-presentation-lesson-page.component';\r\nimport { AppService } from './app.service';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { appReducer } from './store/reducers/app.reducer';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { environment } from 'src/environments/environment';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    CourseMenuModule,\r\n    StartPageModule,\r\n    CreatePageModule,\r\n    CourseContentPageModule,\r\n    EditCoursePageModule,\r\n    StoreModule.forRoot(appReducer),\r\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' }),\r\n    !environment.production ? StoreDevtoolsModule.instrument(): [],\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [AppService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { \r\n  constructor() {\r\n    \r\n  }\r\n\r\n  \r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AppService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "!environment"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CourseContentPageModule"
                        },
                        {
                            "name": "CourseMenuModule"
                        },
                        {
                            "name": "CreatePageModule"
                        },
                        {
                            "name": "EditCoursePageModule"
                        },
                        {
                            "name": "StartPageModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-1f01683d2130ff8735679378b4c278f60020edbe26b46314840fd69e152dd7671dc1fc9e12ffacbb17f84fdf7c487fba0da51d60dc80ff0125bc366aa8c39f2a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CourseContentPageComponent } from './pages/course-content-page/course-content-page.component';\r\nimport { CreateModulePageComponent } from './pages/create-module-page/create-module-page.component';\r\nimport { CreatePageComponent } from './pages/create-page/create-page.component';\r\nimport { StartPageComponent } from './pages/start-page/start-page.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: StartPageComponent,},\r\n  {path: 'create-course', component: CreatePageComponent,},\r\n  {path: 'create-module', component: CreateModulePageComponent,},\r\n  {path: 'course-content', component: CourseContentPageComponent,},\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CourseContentPageModule",
            "id": "module-CourseContentPageModule-e73e063d03ecf81630b0ab39c758d465871f4eb0136d35673d88e12936376b9142ab3a6dfccd491444f168cbe7111f4175013b6292a9bd343f9ce8ab3da6d6e3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/course-content-page/course-content-page.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CourseslistModule } from 'src/app/components/coursesList/courseslist.module';\r\nimport { CourseContentPageComponent } from './course-content-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CourseContentPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    CourseslistModule,\r\n  ],\r\n  exports: [CourseContentPageComponent],\r\n  providers: [],\r\n  bootstrap: [],\r\n})\r\nexport class CourseContentPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CourseContentPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CourseslistModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CourseContentPageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CourseMenuModule",
            "id": "module-CourseMenuModule-a2ac361a2a8791d63cb209b078c5e4413696dc375b7d6056c182666f10040163896000456e07f2bee6e686ab7782535ed901e579acca67cf75af86196f018358",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/course-menu/course-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModuleItemComponent } from './components/module-item/module-item.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CourseMenuComponent } from './course-menu.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CourseMenuComponent,\r\n    ModuleItemComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule\r\n  ],\r\n  exports: [CourseMenuComponent],\r\n  bootstrap: [ModuleItemComponent]\r\n})\r\nexport class CourseMenuModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CourseMenuComponent"
                        },
                        {
                            "name": "ModuleItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CourseMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "ModuleItemComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CourseModule",
            "id": "module-CourseModule-632674182893d98dcdc4426e0d8a616ce6af7c1a3a86ac9d2b7a2a30b220557a3655d764e9b7d46709c3de17d3090c60b0e7a63bc0545326f3f96c1657a1e262",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/coursesList/components/course/course.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HeaderCourseComponent } from './components/header-course/header-course.component';\r\nimport { ItemCourseComponent } from './components/item-course/item-course.component';\r\nimport { CourseComponent } from './course.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CourseComponent,\r\n    ItemCourseComponent,\r\n    HeaderCourseComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [CourseComponent]\r\n})\r\nexport class CourseModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CourseComponent"
                        },
                        {
                            "name": "HeaderCourseComponent"
                        },
                        {
                            "name": "ItemCourseComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CourseComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CourseslistModule",
            "id": "module-CourseslistModule-aac18f66bac126ad133fd4470b5364bb217701973be3be9aa22ae853124d398cff38a94f73ff1ee68196ba4dcf6a48050fcdab8e3e67ae69bdf72cb1b6d641cf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/coursesList/courseslist.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CourseslistComponent } from './courseslist.component';\r\nimport { CourseModule } from './components/course/course.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CourseslistComponent,\r\n  ],\r\n  imports: [BrowserModule, CourseModule],\r\n  providers: [],\r\n  bootstrap: [CourseslistComponent],\r\n  exports: [CourseslistComponent]\r\n})\r\nexport class CourseslistModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CourseslistComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CourseModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CourseslistComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "CourseslistComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CreatePageModule",
            "id": "module-CreatePageModule-465217aacbd16b423d556f111c0f001ca10f05c730249fb2c903c0f417db6026736b729c82331e2a66c2bc4e0b26d54289acef119629bb6fcab76d83f782067e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/modules/create-page-module/create-page-module.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CreateContainerComponent } from 'src/app/components/create-container/create-container.component';\r\nimport { CreateModulePageComponent } from '../../create-module-page/create-module-page.component';\r\nimport { CreatePageComponent } from '../../create-page/create-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateContainerComponent,\r\n    CreateModulePageComponent,\r\n    CreatePageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [CreateContainerComponent, CreateModulePageComponent],\r\n  providers: [],\r\n  bootstrap: [],\r\n})\r\nexport class CreatePageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreateContainerComponent"
                        },
                        {
                            "name": "CreateModulePageComponent"
                        },
                        {
                            "name": "CreatePageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CreateContainerComponent"
                        },
                        {
                            "name": "CreateModulePageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EditCoursePageModule",
            "id": "module-EditCoursePageModule-d4259e6a9bad7e0275d3c8461aa0127aabe14c7dc6f19151237c529b282b0889ef35fa6c266ca38532110e5fad5ff5c9fc4cce4dbf022335ce6eb1a3751b7194",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/edit-course-page/edit-course-page.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AdditionalMaterialContainerComponent } from 'src/app/components/additional-material-container/additional-material-container.component';\r\nimport { BottomEditContainerComponent } from 'src/app/components/bottom-edit-container/bottom-edit-container.component';\r\nimport { CourseMenuModule } from 'src/app/components/course-menu/course-menu.module';\r\nimport { LessonNameContainerComponent } from 'src/app/components/lesson-name-container/lesson-name-container.component';\r\nimport { LessonTypeComponent } from 'src/app/components/lesson-type/lesson-type.component';\r\nimport { PresentationContainerModule } from 'src/app/components/presentation-container/presentation-container.module';\r\nimport { TestContainerModule } from 'src/app/components/test-container/test-container.module';\r\nimport { TextEditorComponent } from 'src/app/components/text-editor/text-editor.component';\r\nimport { TopToolarContainerComponent } from 'src/app/components/top-toolar-container/top-toolar-container.component';\r\nimport { VideoContainerComponent } from 'src/app/components/video-container/video-container.component';\r\nimport { EditAdditionalMaterialPageComponent } from '../edit-additional-material-page/edit-additional-material-page.component';\r\nimport { EditPresentationLessonPageComponent } from '../edit-presentation-lesson-page/edit-presentation-lesson-page.component';\r\nimport { EditTestLessonPageComponent } from '../edit-test-lesson-page/edit-test-lesson-page.component';\r\nimport { EditTextLessonPageComponent } from '../edit-text-lesson-page/edit-text-lesson-page.component';\r\nimport { EditVideoLessonPageComponent } from '../edit-video-lesson-page/edit-video-lesson-page.component';\r\nimport { LessonTypePageComponent } from '../lesson-type-page/lesson-type-page.component';\r\nimport { EditCoursePageRoutingModule } from './edit-course-page-routing.module';\r\nimport { EditCoursePageComponent } from './edit-course-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EditCoursePageComponent,\r\n    LessonTypeComponent,\r\n    TopToolarContainerComponent,\r\n    LessonTypePageComponent,\r\n    EditTextLessonPageComponent,\r\n    TextEditorComponent,\r\n    LessonNameContainerComponent,\r\n    BottomEditContainerComponent,\r\n    EditTestLessonPageComponent,\r\n    AdditionalMaterialContainerComponent,\r\n    EditAdditionalMaterialPageComponent,\r\n    VideoContainerComponent,\r\n    EditVideoLessonPageComponent,\r\n    EditPresentationLessonPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    EditCoursePageRoutingModule,\r\n    CourseMenuModule,\r\n    TestContainerModule,\r\n    PresentationContainerModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [EditCoursePageComponent],\r\n  providers: [],\r\n  bootstrap: [EditCoursePageComponent],\r\n})\r\nexport class EditCoursePageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdditionalMaterialContainerComponent"
                        },
                        {
                            "name": "BottomEditContainerComponent"
                        },
                        {
                            "name": "EditAdditionalMaterialPageComponent"
                        },
                        {
                            "name": "EditCoursePageComponent"
                        },
                        {
                            "name": "EditPresentationLessonPageComponent"
                        },
                        {
                            "name": "EditTestLessonPageComponent"
                        },
                        {
                            "name": "EditTextLessonPageComponent"
                        },
                        {
                            "name": "EditVideoLessonPageComponent"
                        },
                        {
                            "name": "LessonNameContainerComponent"
                        },
                        {
                            "name": "LessonTypeComponent"
                        },
                        {
                            "name": "LessonTypePageComponent"
                        },
                        {
                            "name": "TextEditorComponent"
                        },
                        {
                            "name": "TopToolarContainerComponent"
                        },
                        {
                            "name": "VideoContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CourseMenuModule"
                        },
                        {
                            "name": "EditCoursePageRoutingModule"
                        },
                        {
                            "name": "PresentationContainerModule"
                        },
                        {
                            "name": "TestContainerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EditCoursePageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "EditCoursePageComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EditCoursePageRoutingModule",
            "id": "module-EditCoursePageRoutingModule-7f960ad3d68c869fc9512c22b3a84c4a399eede327e81062635fc76da9a6ded70cd03cb02af17b454ed5e6fbb3047a670038159e4e2e24b70f92bb02fd19255e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/edit-course-page/edit-course-page-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EditAdditionalMaterialPageComponent } from '../edit-additional-material-page/edit-additional-material-page.component';\r\nimport { EditPresentationLessonPageComponent } from '../edit-presentation-lesson-page/edit-presentation-lesson-page.component';\r\nimport { EditTestLessonPageComponent } from '../edit-test-lesson-page/edit-test-lesson-page.component';\r\nimport { EditTextLessonPageComponent } from '../edit-text-lesson-page/edit-text-lesson-page.component';\r\nimport { EditVideoLessonPageComponent } from '../edit-video-lesson-page/edit-video-lesson-page.component';\r\nimport { LessonTypePageComponent } from '../lesson-type-page/lesson-type-page.component';\r\nimport { EditCoursePageComponent } from './edit-course-page.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'edit-course', \r\n        component: EditCoursePageComponent,\r\n        children: [\r\n          {\r\n            path: 'select-lesson-type',\r\n            component: LessonTypePageComponent,\r\n          },\r\n          {\r\n            path: 'edit-text-lesson',\r\n            component: EditTextLessonPageComponent,\r\n          },\r\n          {\r\n            path: 'edit-test-lesson',\r\n            component: EditTestLessonPageComponent,\r\n          },\r\n          {\r\n            path: 'edit-add-material-lesson',\r\n            component: EditAdditionalMaterialPageComponent,\r\n          },\r\n          {\r\n            path: 'edit-video-lesson',\r\n            component: EditVideoLessonPageComponent,\r\n          },\r\n          {\r\n            path: 'edit-presentation-lesson',\r\n            component: EditPresentationLessonPageComponent,\r\n          },\r\n        ]\r\n      },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EditCoursePageRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PresentationContainerModule",
            "id": "module-PresentationContainerModule-5906cec45d0c91db900cac9fc1b1b14978a6a6c6c014ec8bd260e412bed194fb46ce8e9160a034b69f79b8733101004b0b48fa5a7adbdbfa9a3e03921e71c5e1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/presentation-container/presentation-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { PresentationTopToolbarComponent } from '../presentation-top-toolbar/presentation-top-toolbar.component';\r\nimport { PresentationContainerComponent } from './presentation-container.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PresentationContainerComponent,\r\n    PresentationTopToolbarComponent,\r\n  ],\r\n  imports: [BrowserModule],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [PresentationContainerComponent]\r\n})\r\nexport class PresentationContainerModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PresentationContainerComponent"
                        },
                        {
                            "name": "PresentationTopToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PresentationContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StartPageModule",
            "id": "module-StartPageModule-085451fb1e5b38398856f6192a6b4d70391ed3cd488e6f6558e8cc56150087c93d7fe339c148d21c00065e4dcfc22de48fcbfb679d41613ec53ee4faa661d14f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/start-page/start-page.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CoursePreviewContainerComponent } from 'src/app/components/course-preview-container/course-preview-container.component';\r\nimport { StartPageComponent } from './start-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StartPageComponent,\r\n    CoursePreviewContainerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n  ],\r\n  exports: [StartPageComponent],\r\n  providers: [],\r\n  bootstrap: [],\r\n})\r\nexport class StartPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CoursePreviewContainerComponent"
                        },
                        {
                            "name": "StartPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "StartPageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TestContainerModule",
            "id": "module-TestContainerModule-9dc11cd6509aa0dcbc2460c7c226e7fb554947c0e52960b131b55e79abb96683966606a2b6bf36c944e07adfcb16ebe30b04d361de6c0b7bf6be834574f7fa81",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/test-container/test-container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AnswerOptionComponent } from '../answer-option/answer-option.component';\r\nimport { TestTypeButtonsComponent } from '../test-type-buttons/test-type-buttons.component';\r\nimport { TestContainerComponent } from './test-container.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TestContainerComponent,\r\n    AnswerOptionComponent,\r\n    TestTypeButtonsComponent,\r\n\r\n  ],\r\n  imports: [BrowserModule],\r\n  providers: [],\r\n  bootstrap: [TestContainerComponent],\r\n  exports: [TestContainerComponent]\r\n})\r\nexport class TestContainerModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AnswerOptionComponent"
                        },
                        {
                            "name": "TestContainerComponent"
                        },
                        {
                            "name": "TestTypeButtonsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TestContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "TestContainerComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AdditionalContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/additional-material-container/additional-material-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/reducers/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<AppState, any>",
                "defaultValue": "{\r\n    courseId: CourseIdReducer,\r\n    moduleId: ModuleIdReducer,\r\n    router: routerReducer,\r\n}"
            },
            {
                "name": "BottomEditButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/bottom-edit-container/bottom-edit-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Course",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/components/course/course.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CourseIdReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/reducers/course-id.reduser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\r\n    state = initCourseIdState,\r\n    action: CourseIdActionsType\r\n): CourseIdState => {\r\n    switch(action.type) {\r\n        case CourseIdActions.Set_Course_Id: \r\n            return {\r\n                ...state,\r\n                courseId: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"
            },
            {
                "name": "CourseIdSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/selectors/course-id.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectCourseId,\r\n    (state: CourseIdState) => state.courseId,\r\n)"
            },
            {
                "name": "CourseMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/course-menu/course-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CoursePreviewJs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CoursePreviewNet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CoursesList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/coursesList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CreateCourseContainer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/create-container/create-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CreateModuleContainer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/create-container/create-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Editor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/text-editor/text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditorWithTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/text-editor/text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "FewType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "getInitState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/states/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\r\n    return initAppSate;\r\n}"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/components/course/components/header-course/header-course.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "initAppSate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/states/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "{\r\n    courseId: initCourseIdState,\r\n    moduleId: initModuleIdState,\r\n}"
            },
            {
                "name": "initCourseIdState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/states/course-id.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CourseIdState",
                "defaultValue": "{\r\n    courseId: '',\r\n}"
            },
            {
                "name": "initCourseInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/course-content-page/course-content-page.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  description: '',\r\n  id: '',\r\n  modules: [],\r\n  name: '',\r\n}"
            },
            {
                "name": "initModuleIdState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/states/module-id.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ModuleIdState",
                "defaultValue": "{\r\n    moduleId: '',\r\n}"
            },
            {
                "name": "ItemCourse",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/components/course/components/item-course/item-course.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LessonNameContainer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-name-container/lesson-name-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LessonTypeLiterature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LessonTypePresentation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LessonTypeTest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LessonTypeText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LessonTypeVideo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ModuleIdReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/reducers/module-id.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\r\n    state = initModuleIdState,\r\n    action: ModuleIdActionsType\r\n): ModuleIdState => {\r\n    switch(action.type) {\r\n        case ModuleIdActions.Set_Module_Id: \r\n            return {\r\n                ...state,\r\n                moduleId: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"
            },
            {
                "name": "ModuleIdSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/selectors/module-id.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectModuleId,\r\n    (state: ModuleIdState) => state.moduleId,\r\n)"
            },
            {
                "name": "ModuleItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/course-menu/components/module-item/module-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OneType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PresentationContainer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/presentation-container/presentation-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PresentationToolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RadioOption",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/answer-option/answer-option.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "selectCourseId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/selectors/course-id.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: AppState) => state.courseId"
            },
            {
                "name": "selectModuleId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/selectors/module-id.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: AppState) => state.moduleId"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/additional-material-container/additional-material-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AdditionalMaterialContainerComponent>",
                "defaultValue": "(args: AdditionalMaterialContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/answer-option/answer-option.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AnswerOptionComponent>",
                "defaultValue": "(args: AnswerOptionComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/bottom-edit-container/bottom-edit-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BottomEditContainerComponent>",
                "defaultValue": "(args: BottomEditContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CoursePreviewContainerComponent>",
                "defaultValue": "(args: CoursePreviewContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/coursesList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CourseslistComponent>",
                "defaultValue": "(args: CourseslistComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/course-menu/course-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CourseMenuComponent>",
                "defaultValue": "(args: CourseMenuComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/create-container/create-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CreateContainerComponent>",
                "defaultValue": "(args: CreateContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-name-container/lesson-name-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LessonNameContainerComponent>",
                "defaultValue": "(args: LessonNameContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/presentation-container/presentation-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PresentationContainerComponent>",
                "defaultValue": "(args: PresentationContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LessonTypeComponent>",
                "defaultValue": "(args: LessonTypeComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PresentationTopToolbarComponent>",
                "defaultValue": "(args: PresentationTopToolbarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/test-container/test-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TestContainerComponent>",
                "defaultValue": "(args: TestContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TestTypeButtonsComponent>",
                "defaultValue": "(args: TestTypeButtonsComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/text-editor/text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextEditorComponent>",
                "defaultValue": "(args: TextEditorComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/top-toolar-container/top-toolar-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TopToolarContainerComponent>",
                "defaultValue": "(args: TopToolarContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/video-container/video-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<VideoContainerComponent>",
                "defaultValue": "(args: VideoContainerComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/components/course/course.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CourseComponent>",
                "defaultValue": "(args: CourseComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/course-menu/components/module-item/module-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ModuleItemComponent>",
                "defaultValue": "(args: ModuleItemComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/components/course/components/item-course/item-course.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ItemCourseComponent>",
                "defaultValue": "(args: ItemCourseComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/coursesList/components/course/components/header-course/header-course.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderCourseComponent>",
                "defaultValue": "(args: HeaderCourseComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "TestContainer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/test-container/test-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TopToolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/top-toolar-container/top-toolar-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "typeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/lesson-type/lesson-type.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\r\n  literature: {\r\n    title: 'Литература',\r\n    caption: 'Добавляйте ссылки на книги и источники  '\r\n  },\r\n  presentation: {\r\n    title: 'Презентация',\r\n    caption: 'Создавайте презентации и озвучивайте их '\r\n  },\r\n  test: {\r\n    title: 'Тест',\r\n    caption: 'Составляйте тесты для проверки знаний'\r\n  },\r\n  text: {\r\n    title: 'Текст',\r\n    caption: 'Добавляйте текст и изображения для ваших лекций'\r\n  },\r\n  video: {\r\n    title: 'Видео',\r\n    caption: 'Добавляйте уже готовые видео уроки'\r\n  },\r\n}"
            },
            {
                "name": "VideoContainer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/video-container/video-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AppState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/store/states/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "CourseIdActionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "GetCourseId | SetCourseId",
                "file": "src/app/store/actions/course-id.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "CourseIdState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/store/states/course-id.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "CourseMenuItem",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/typings/courseMenuItemType.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "CourseType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/typings/api/courseType.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Lesson",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/typings/api/courseType.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "LessonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"video\" | \"literature\" | \"test\" | \"presentation\"",
                "file": "src/typings/lessonType.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Module",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/typings/api/courseType.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ModuleIdActionsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "SetModuleId",
                "file": "src/app/store/actions/module-id.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "ModuleIdState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/store/states/module-id.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [
            {
                "name": "CourseIdActions",
                "childs": [
                    {
                        "name": "Get_Course_Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[CourseId] Get_Course_Id"
                    },
                    {
                        "name": "Set_Course_Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[CourseId] Set_Course_Id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/store/actions/course-id.action.ts"
            },
            {
                "name": "ModuleIdActions",
                "childs": [
                    {
                        "name": "Set_Module_Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[CourseId] Set_Module_Id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/store/actions/module-id.action.ts"
            }
        ],
        "groupedVariables": {
            "src/app/components/additional-material-container/additional-material-container.stories.ts": [
                {
                    "name": "AdditionalContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/additional-material-container/additional-material-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/additional-material-container/additional-material-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AdditionalMaterialContainerComponent>",
                    "defaultValue": "(args: AdditionalMaterialContainerComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/store/reducers/app.reducer.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/reducers/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<AppState, any>",
                    "defaultValue": "{\r\n    courseId: CourseIdReducer,\r\n    moduleId: ModuleIdReducer,\r\n    router: routerReducer,\r\n}"
                }
            ],
            "src/app/components/bottom-edit-container/bottom-edit-container.stories.ts": [
                {
                    "name": "BottomEditButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/bottom-edit-container/bottom-edit-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/bottom-edit-container/bottom-edit-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BottomEditContainerComponent>",
                    "defaultValue": "(args: BottomEditContainerComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/coursesList/components/course/course.stories.ts": [
                {
                    "name": "Course",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/components/course/course.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/components/course/course.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CourseComponent>",
                    "defaultValue": "(args: CourseComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/store/reducers/course-id.reduser.ts": [
                {
                    "name": "CourseIdReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/reducers/course-id.reduser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\r\n    state = initCourseIdState,\r\n    action: CourseIdActionsType\r\n): CourseIdState => {\r\n    switch(action.type) {\r\n        case CourseIdActions.Set_Course_Id: \r\n            return {\r\n                ...state,\r\n                courseId: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"
                }
            ],
            "src/app/store/selectors/course-id.selector.ts": [
                {
                    "name": "CourseIdSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/selectors/course-id.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectCourseId,\r\n    (state: CourseIdState) => state.courseId,\r\n)"
                },
                {
                    "name": "selectCourseId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/selectors/course-id.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: AppState) => state.courseId"
                }
            ],
            "src/app/components/course-menu/course-menu.stories.ts": [
                {
                    "name": "CourseMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/course-menu/course-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/course-menu/course-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CourseMenuComponent>",
                    "defaultValue": "(args: CourseMenuComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/course-preview-container/course-preview-container.stories.ts": [
                {
                    "name": "CoursePreviewJs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CoursePreviewNet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CoursePreviewContainerComponent>",
                    "defaultValue": "(args: CoursePreviewContainerComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/coursesList/coursesList.stories.ts": [
                {
                    "name": "CoursesList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/coursesList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/coursesList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CourseslistComponent>",
                    "defaultValue": "(args: CourseslistComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/create-container/create-container.stories.ts": [
                {
                    "name": "CreateCourseContainer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/create-container/create-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreateModuleContainer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/create-container/create-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/create-container/create-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CreateContainerComponent>",
                    "defaultValue": "(args: CreateContainerComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/header/Header.stories.ts": [
                {
                    "name": "DefaultHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/text-editor/text-editor.stories.ts": [
                {
                    "name": "Editor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/text-editor/text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "EditorWithTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/text-editor/text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/text-editor/text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextEditorComponent>",
                    "defaultValue": "(args: TextEditorComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/components/test-type-buttons/test-type-buttons.stories.ts": [
                {
                    "name": "FewType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OneType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TestTypeButtonsComponent>",
                    "defaultValue": "(args: TestTypeButtonsComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/store/states/app.state.ts": [
                {
                    "name": "getInitState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/states/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\r\n    return initAppSate;\r\n}"
                },
                {
                    "name": "initAppSate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/states/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "{\r\n    courseId: initCourseIdState,\r\n    moduleId: initModuleIdState,\r\n}"
                }
            ],
            "src/app/components/coursesList/components/course/components/header-course/header-course.component.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/components/course/components/header-course/header-course.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/components/course/components/header-course/header-course.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderCourseComponent>",
                    "defaultValue": "(args: HeaderCourseComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/store/states/course-id.state.ts": [
                {
                    "name": "initCourseIdState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/states/course-id.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CourseIdState",
                    "defaultValue": "{\r\n    courseId: '',\r\n}"
                }
            ],
            "src/app/pages/course-content-page/course-content-page.component.ts": [
                {
                    "name": "initCourseInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/course-content-page/course-content-page.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  description: '',\r\n  id: '',\r\n  modules: [],\r\n  name: '',\r\n}"
                }
            ],
            "src/app/store/states/module-id.state.ts": [
                {
                    "name": "initModuleIdState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/states/module-id.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModuleIdState",
                    "defaultValue": "{\r\n    moduleId: '',\r\n}"
                }
            ],
            "src/app/components/coursesList/components/course/components/item-course/item-course.component.stories.ts": [
                {
                    "name": "ItemCourse",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/components/course/components/item-course/item-course.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/coursesList/components/course/components/item-course/item-course.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ItemCourseComponent>",
                    "defaultValue": "(args: ItemCourseComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/lesson-name-container/lesson-name-container.stories.ts": [
                {
                    "name": "LessonNameContainer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-name-container/lesson-name-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-name-container/lesson-name-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LessonNameContainerComponent>",
                    "defaultValue": "(args: LessonNameContainerComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/lesson-type/lesson-type.stories.ts": [
                {
                    "name": "LessonTypeLiterature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LessonTypePresentation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LessonTypeTest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LessonTypeText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LessonTypeVideo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-type/lesson-type.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LessonTypeComponent>",
                    "defaultValue": "(args: LessonTypeComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/store/reducers/module-id.reducer.ts": [
                {
                    "name": "ModuleIdReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/reducers/module-id.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\r\n    state = initModuleIdState,\r\n    action: ModuleIdActionsType\r\n): ModuleIdState => {\r\n    switch(action.type) {\r\n        case ModuleIdActions.Set_Module_Id: \r\n            return {\r\n                ...state,\r\n                moduleId: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"
                }
            ],
            "src/app/store/selectors/module-id.selector.ts": [
                {
                    "name": "ModuleIdSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/selectors/module-id.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectModuleId,\r\n    (state: ModuleIdState) => state.moduleId,\r\n)"
                },
                {
                    "name": "selectModuleId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/selectors/module-id.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: AppState) => state.moduleId"
                }
            ],
            "src/app/components/course-menu/components/module-item/module-item.stories.ts": [
                {
                    "name": "ModuleItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/course-menu/components/module-item/module-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/course-menu/components/module-item/module-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ModuleItemComponent>",
                    "defaultValue": "(args: ModuleItemComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/presentation-container/presentation-container.stories.ts": [
                {
                    "name": "PresentationContainer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/presentation-container/presentation-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/presentation-container/presentation-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PresentationContainerComponent>",
                    "defaultValue": "(args: PresentationContainerComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/presentation-top-toolbar/presentation-top-toolbar.stories.ts": [
                {
                    "name": "PresentationToolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PresentationTopToolbarComponent>",
                    "defaultValue": "(args: PresentationTopToolbarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/answer-option/answer-option.stories.ts": [
                {
                    "name": "RadioOption",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/answer-option/answer-option.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/answer-option/answer-option.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AnswerOptionComponent>",
                    "defaultValue": "(args: AnswerOptionComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/test-container/test-container.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/test-container/test-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TestContainerComponent>",
                    "defaultValue": "(args: TestContainerComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "TestContainer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/test-container/test-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/top-toolar-container/top-toolar-container.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/top-toolar-container/top-toolar-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TopToolarContainerComponent>",
                    "defaultValue": "(args: TopToolarContainerComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "TopToolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/top-toolar-container/top-toolar-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/video-container/video-container.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/video-container/video-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<VideoContainerComponent>",
                    "defaultValue": "(args: VideoContainerComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "VideoContainer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/video-container/video-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/lesson-type/lesson-type.component.ts": [
                {
                    "name": "typeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/lesson-type/lesson-type.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\r\n  literature: {\r\n    title: 'Литература',\r\n    caption: 'Добавляйте ссылки на книги и источники  '\r\n  },\r\n  presentation: {\r\n    title: 'Презентация',\r\n    caption: 'Создавайте презентации и озвучивайте их '\r\n  },\r\n  test: {\r\n    title: 'Тест',\r\n    caption: 'Составляйте тесты для проверки знаний'\r\n  },\r\n  text: {\r\n    title: 'Текст',\r\n    caption: 'Добавляйте текст и изображения для ваших лекций'\r\n  },\r\n  video: {\r\n    title: 'Видео',\r\n    caption: 'Добавляйте уже готовые видео уроки'\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/store/actions/course-id.action.ts": [
                {
                    "name": "CourseIdActions",
                    "childs": [
                        {
                            "name": "Get_Course_Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[CourseId] Get_Course_Id"
                        },
                        {
                            "name": "Set_Course_Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[CourseId] Set_Course_Id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/store/actions/course-id.action.ts"
                }
            ],
            "src/app/store/actions/module-id.action.ts": [
                {
                    "name": "ModuleIdActions",
                    "childs": [
                        {
                            "name": "Set_Module_Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[CourseId] Set_Module_Id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/store/actions/module-id.action.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/store/states/app.state.ts": [
                {
                    "name": "AppState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/store/states/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/store/actions/course-id.action.ts": [
                {
                    "name": "CourseIdActionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "GetCourseId | SetCourseId",
                    "file": "src/app/store/actions/course-id.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/store/states/course-id.state.ts": [
                {
                    "name": "CourseIdState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/store/states/course-id.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/typings/courseMenuItemType.ts": [
                {
                    "name": "CourseMenuItem",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/typings/courseMenuItemType.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/typings/api/courseType.ts": [
                {
                    "name": "CourseType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/typings/api/courseType.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Lesson",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/typings/api/courseType.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Module",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/typings/api/courseType.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/typings/lessonType.ts": [
                {
                    "name": "LessonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"video\" | \"literature\" | \"test\" | \"presentation\"",
                    "file": "src/typings/lessonType.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/store/actions/module-id.action.ts": [
                {
                    "name": "ModuleIdActionsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "SetModuleId",
                    "file": "src/app/store/actions/module-id.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/store/states/module-id.state.ts": [
                {
                    "name": "ModuleIdState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/store/states/module-id.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "StartPageComponent"
                    },
                    {
                        "path": "create-course",
                        "component": "CreatePageComponent"
                    },
                    {
                        "path": "create-module",
                        "component": "CreateModulePageComponent"
                    },
                    {
                        "path": "course-content",
                        "component": "CourseContentPageComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/pages/edit-course-page/edit-course-page-routing.module.ts",
                "module": "EditCoursePageRoutingModule",
                "children": [
                    {
                        "path": "edit-course",
                        "component": "EditCoursePageComponent",
                        "children": [
                            {
                                "path": "select-lesson-type",
                                "component": "LessonTypePageComponent"
                            },
                            {
                                "path": "edit-text-lesson",
                                "component": "EditTextLessonPageComponent"
                            },
                            {
                                "path": "edit-test-lesson",
                                "component": "EditTestLessonPageComponent"
                            },
                            {
                                "path": "edit-add-material-lesson",
                                "component": "EditAdditionalMaterialPageComponent"
                            },
                            {
                                "path": "edit-video-lesson",
                                "component": "EditVideoLessonPageComponent"
                            },
                            {
                                "path": "edit-presentation-lesson",
                                "component": "EditPresentationLessonPageComponent"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/additional-material-container/additional-material-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdditionalMaterialContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/additional-material-container/additional-material-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AdditionalContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/additional-material-container/additional-material-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/answer-option/answer-option.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AnswerOptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/answer-option/answer-option.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioOption",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/answer-option/answer-option.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/bottom-edit-container/bottom-edit-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BottomEditContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/bottom-edit-container/bottom-edit-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomEditButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/bottom-edit-container/bottom-edit-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-menu/components/module-item/module-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModuleItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-menu/components/module-item/module-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ModuleItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-menu/components/module-item/module-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-menu/course-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CourseMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-menu/course-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CourseMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-menu/course-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-preview-container/course-preview-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoursePreviewContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CoursePreviewJs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CoursePreviewNet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/course-preview-container/course-preview-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/components/header-course/header-course.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/components/header-course/header-course.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/components/header-course/header-course.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderCourseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/components/item-course/item-course.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ItemCourse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/components/item-course/item-course.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/components/item-course/item-course.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemCourseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/course.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CourseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/course.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Course",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/components/course/course.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/coursesList.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CoursesList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/coursesList.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/coursesList/courseslist.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CourseslistComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/create-container/create-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/create-container/create-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateCourseContainer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/create-container/create-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateModuleContainer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/create-container/create-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-name-container/lesson-name-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonNameContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-name-container/lesson-name-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LessonNameContainer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-name-container/lesson-name-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonTypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "typeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LessonTypeLiterature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LessonTypePresentation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LessonTypeTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LessonTypeText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LessonTypeVideo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lesson-type/lesson-type.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/presentation-container/presentation-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PresentationContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/presentation-container/presentation-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PresentationContainer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/presentation-container/presentation-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PresentationTopToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PresentationToolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/presentation-top-toolbar/presentation-top-toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/test-container/test-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/test-container/test-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/test-container/test-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TestContainer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/test-type-buttons/test-type-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestTypeButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FewType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/test-type-buttons/test-type-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text-editor/text-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text-editor/text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Editor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text-editor/text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditorWithTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text-editor/text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/top-toolar-container/top-toolar-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopToolarContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/top-toolar-container/top-toolar-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/top-toolar-container/top-toolar-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopToolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/video-container/video-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VideoContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/video-container/video-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/video-container/video-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VideoContainer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/course-content-page/course-content-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CourseContentPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/course-content-page/course-content-page.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initCourseInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/create-module-page/create-module-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateModulePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/create-page/create-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreatePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/edit-additional-material-page/edit-additional-material-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditAdditionalMaterialPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/edit-course-page/edit-course-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditCoursePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/edit-presentation-lesson-page/edit-presentation-lesson-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditPresentationLessonPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/edit-test-lesson-page/edit-test-lesson-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditTestLessonPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/edit-text-lesson-page/edit-text-lesson-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditTextLessonPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/edit-video-lesson-page/edit-video-lesson-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditVideoLessonPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/lesson-type-page/lesson-type-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonTypePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/start-page/start-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StartPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/course-id.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GetCourseId",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/course-id.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetCourseId",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/module-id.action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetModuleId",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducers/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducers/course-id.reduser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CourseIdReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducers/module-id.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ModuleIdReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/selectors/course-id.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CourseIdSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/selectors/course-id.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCourseId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/selectors/module-id.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ModuleIdSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/selectors/module-id.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectModuleId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/states/app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getInitState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/states/app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initAppSate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/states/course-id.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initCourseIdState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/states/module-id.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initModuleIdState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}